{
    "pipes": [
        {
            "name": "SafeUrlPipe",
            "id": "pipe-SafeUrlPipe-1c1d54637c670a418bb6d508b04603211db2376ddc9930247bfa56d88b6f84248b498e09dc9a587d8f48bf8f9bd010154890664dbf11639a2e0d0e7af5329174",
            "file": "projects/client/src/app/iframe-plot/safe-url.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "safeUrl",
            "sourceCode": "import { Pipe, PipeTransform, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeUrl',\n  standalone: true\n})\nexport class SafeUrlPipe implements PipeTransform {\n\n  constructor(private domSanitizer: DomSanitizer) {}\n  \n  transform(url: string) {\n    const sanitized = this.domSanitizer.sanitize(SecurityContext.URL, url)\n    if (sanitized) {\n      return this.domSanitizer.bypassSecurityTrustResourceUrl(sanitized)\n    } else {\n      throw Error(`unsafe url: ${url}`)\n    }\n  }\n\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "Change",
            "id": "interface-Change-18753e604d54048f93e50afb992a48329b1eabb01e9fbed5464e104b05df292f2cb55c84fa11bd06127577259299e3dbff9e9ce223dd4f7284c56739fc24dacb",
            "file": "projects/client/src/app/table-data-source.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { concatMap } from 'rxjs/operators';\nimport { Observable, merge, of, Subject } from 'rxjs';\n\nexport interface Change {}\n\ninterface DataService<T> {\n\n  find: (params?: {\n    id?: number,\n    filter?: {\n      skip?: number,\n      limit?: number,\n      order?: string[],\n    }\n  }) => Observable<T[]>\n\n  changes: Subject<Change>\n}\n\nexport class TableDataSource<T> extends DataSource<T> {\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor(\n    private dataService: DataService<T>,\n  ) {\n    super();\n  }\n\n  connect(): Observable<T[]> {\n    if (this.paginator && this.sort) {\n      return merge(of({}), this.dataService.changes, this.paginator.page, this.sort.sortChange)\n        .pipe(\n          concatMap(() => {\n            const skip = this.paginator!.pageIndex * this.paginator!.pageSize;\n            const order = (!this.sort || !this.sort.active || this.sort.direction === '') ?\n              undefined\n              :\n              [`${this.sort.active} ${this.sort.direction}`]\n            return this.dataService.find({\n              filter: {skip, limit: this.paginator!.pageSize, order}\n            })\n          }),\n        );\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  disconnect(): void {}\n\n}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "CourseStat",
            "id": "interface-CourseStat-f69cb976c0daee9d28b4339ec97ec0f98d8be303f29195e93cec84e339da98a1f3bd1c32ba4ee95a06e38aaae13a2884b07a6d8a93bc1d36b5640c8d50c7bfcf",
            "file": "projects/client/src/app/ehden-table/course-stats.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { delay, Observable, of, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Change } from '../table-data-source';\n\nexport interface CourseStat {\n  \"course_fullname\": string,\n  \"courseFullNameText\"?: string,\n  \"courseFullNameLink\"?: String,\n  \"course_shortname\": string,\n  \"category\": string,\n  \"started\": number,\n  \"completions\": number,\n  \"course_started\": string,\n  \"authors\": string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseStatsService {\n\n  data: CourseStat[] = []\n  changes = new Subject<Change>()\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandler,\n  ) {\n    this.http.get<CourseStat[]>(`${environment.plots}/course-stats`).subscribe({\n      next: (p) => { \n        this.data = p.map((r) => {\n          // n[n.find(\"[\")+1:n.find(\"]\")]\n          r.courseFullNameText = r['course_fullname'].substring(1, r['course_fullname'].indexOf(']'))\n          r.courseFullNameLink = r['course_fullname'].substring(r['course_fullname'].lastIndexOf('(')+1, r['course_fullname'].length - 1)\n          return r\n        }) \n        this.changes.next({}) \n      },\n      error: (r) => { this.errorHandler.handleError(r) }\n    })\n  }\n\n  create(params: {\n    body: Omit<CourseStat, 'id'>\n  }): Observable<CourseStat> {\n    const n = {...params.body, id: this.data.length}\n    this.data.push(n)\n    this.changes.next({})\n    return of(n).pipe(delay(1000))\n  }\n\n  find(params?: {\n    id?: number,\n    filter?: {\n      skip?: number,\n      limit?: number,\n      order?: string[],\n    }\n  }): Observable<CourseStat[]> {\n    if (params?.id) {\n      return of([this.data[params.id]])\n    } else {\n      let d = [...this.data]\n      if (params?.filter?.order) {\n        this.order(d, params.filter.order)\n      }\n      if (params?.filter?.skip !== undefined) {\n        d = d.splice(params?.filter?.skip, params?.filter?.limit)\n      }\n      return of(d)\n    }\n  }\n\n  private order(data: CourseStat[], order: string[]): void {\n    order.reduceRight((_: null | void, o): void => {\n      const [key, direction] = o.split(' ')\n      data.sort((a: any, b: any) => {\n        const isAsc = direction.toLowerCase() === 'asc';\n        switch (key) {\n          // case 'title': return compare(a.title, b.title, isAsc);\n          // case 'id': return compare(+a.id, +b.id, isAsc);\n          default: return this.compare(a[key], b[key], isAsc);\n        }\n      });\n    }, null)\n  }\n\n  compare(a: any, b: any, isAsc: boolean): number {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n\n  count(): Observable<number> {\n    return of(this.data.length)\n  }\n}\n",
            "properties": [
                {
                    "name": "authors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "completions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "course_fullname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "course_shortname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "course_started",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "courseFullNameLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "courseFullNameText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "started",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataService",
            "id": "interface-DataService-18753e604d54048f93e50afb992a48329b1eabb01e9fbed5464e104b05df292f2cb55c84fa11bd06127577259299e3dbff9e9ce223dd4f7284c56739fc24dacb",
            "file": "projects/client/src/app/table-data-source.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { concatMap } from 'rxjs/operators';\nimport { Observable, merge, of, Subject } from 'rxjs';\n\nexport interface Change {}\n\ninterface DataService<T> {\n\n  find: (params?: {\n    id?: number,\n    filter?: {\n      skip?: number,\n      limit?: number,\n      order?: string[],\n    }\n  }) => Observable<T[]>\n\n  changes: Subject<Change>\n}\n\nexport class TableDataSource<T> extends DataSource<T> {\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor(\n    private dataService: DataService<T>,\n  ) {\n    super();\n  }\n\n  connect(): Observable<T[]> {\n    if (this.paginator && this.sort) {\n      return merge(of({}), this.dataService.changes, this.paginator.page, this.sort.sortChange)\n        .pipe(\n          concatMap(() => {\n            const skip = this.paginator!.pageIndex * this.paginator!.pageSize;\n            const order = (!this.sort || !this.sort.active || this.sort.direction === '') ?\n              undefined\n              :\n              [`${this.sort.active} ${this.sort.direction}`]\n            return this.dataService.find({\n              filter: {skip, limit: this.paginator!.pageSize, order}\n            })\n          }),\n        );\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  disconnect(): void {}\n\n}\n",
            "properties": [
                {
                    "name": "changes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<Change>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "find",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Publication",
            "id": "interface-Publication-f0ef5d1386bbc8602c04d324a35bc80a832389e32e0b2ed8ca4df639652befc541cebca5c2650f8113cf94d5a19e7980fca9cf74bdfca5ce32ccc1d4c80bf51b",
            "file": "projects/client/src/app/pub-med-table/publications.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { delay, Observable, of, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Change } from '../table-data-source';\n\nexport interface Publication  {\n  \"Authors\": string,\n  \"Citation Count\": number,\n  \"Creation Date\": string,\n  \"First Authors\": string,\n  \"Journal\": string,\n  \"PubMed ID\": string,\n  \"Publication\": string,\n  \"publicationTitle\"?: string,\n  \"publicationLink\"?: string,\n  \"Publication Year\": number,\n  \"SNOMED Terms (n)\": string,\n  \"snomedTerms\"?: string,\n  \"snomedLink\"?: string,\n  \"Title\": string,\n  \"authors\": \"\"\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublicationsService {\n\n  data: Publication[] = []\n  changes = new Subject<Change>()\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandler,\n  ) {\n    this.http.get<Publication[]>(`${environment.plots}/publications`).subscribe({\n      next: (p) => { \n        this.data = p.map((r) => {\n          // n[n.find(\"[\")+1:n.find(\"]\")]\n          r.publicationTitle = r['Publication'].substring(1, r['Publication'].indexOf(']'))\n          r.publicationLink = r['Publication'].substring(r['Publication'].lastIndexOf('(')+1, r['Publication'].length - 1)\n          r.snomedTerms = r[\"SNOMED Terms (n)\"].substring(1, r['SNOMED Terms (n)'].lastIndexOf(']'))\n          r.snomedLink = `${environment.plots}${r['SNOMED Terms (n)'].substring(r['SNOMED Terms (n)'].lastIndexOf('(')+1, r['SNOMED Terms (n)'].length - 1)}`\n          return r\n        }) \n        this.changes.next({}) \n      },\n      error: (r) => { this.errorHandler.handleError(r) }\n    })\n  }\n\n  create(params: {\n    body: Omit<Publication, 'id'>\n  }): Observable<Publication> {\n    const n = {...params.body, id: this.data.length}\n    this.data.push(n)\n    this.changes.next({})\n    return of(n).pipe(delay(1000))\n  }\n\n  find(params?: {\n    id?: number,\n    filter?: {\n      skip?: number,\n      limit?: number,\n      order?: string[],\n    }\n  }): Observable<Publication[]> {\n    if (params?.id) {\n      return of([this.data[params.id]])\n    } else {\n      let d = [...this.data]\n      if (params?.filter?.order) {\n        this.order(d, params.filter.order)\n      }\n      if (params?.filter?.skip !== undefined) {\n        d = d.splice(params?.filter?.skip, params?.filter?.limit)\n      }\n      return of(d)\n    }\n  }\n\n  private order(data: Publication[], order: string[]): void {\n    order.reduceRight((_: null | void, o): void => {\n      const [key, direction] = o.split(' ')\n      data.sort((a: any, b: any) => {\n        const isAsc = direction.toLowerCase() === 'asc';\n        switch (key) {\n          // case 'title': return compare(a.title, b.title, isAsc);\n          // case 'id': return compare(+a.id, +b.id, isAsc);\n          default: return this.compare(a[key], b[key], isAsc);\n        }\n      });\n    }, null)\n  }\n\n  compare(a: any, b: any, isAsc: boolean): number {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n\n  count(): Observable<number> {\n    return of(this.data.length)\n  }\n}\n",
            "properties": [
                {
                    "name": "authors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "Authors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "Citation Count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Creation Date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "First Authors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Journal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "Publication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Publication Year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "publicationLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "publicationTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "PubMed ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "SNOMED Terms (n)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "snomedLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "snomedTerms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "projects/example-stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "YouTubeVideo",
            "id": "interface-YouTubeVideo-96f0bb2039374a2b89e67180bfb6426db703778d83db3ec708e6a37dad07d2cceee582ea698d2c5a321042a6d36d9a75a20b0b2a4e4cfabb588be0649af66202",
            "file": "projects/client/src/app/you-tube-table/you-tube.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { delay, Observable, of, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Change } from '../table-data-source';\n\nexport interface YouTubeVideo {\n  \"id\": string,\n  \"Title\": string,\n  \"titleText\"?: string,\n  \"titleLink\"?: string,\n  \"Duration\": string,\n  \"Date Published\": string,\n  \"Total Views\": number,\n  \"Recent Views\": number,\n  \"channelTitle\": string,\n  \"SNOMED Terms (n)\": string,\n  \"snomedTerms\"?: string,\n  \"snomedLink\"?: string,\n  \"yr\": number,\n  \"hrsWatched\": number,\n  \"Length\": string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YouTubeService {\n\n  data: YouTubeVideo[] = []\n  changes = new Subject<Change>()\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandler,\n  ) {\n    this.http.get<YouTubeVideo[]>(`${environment.plots}/youtube`).subscribe({\n      next: (p) => { \n        this.data = p.map((r) => {\n          // n[n.find(\"[\")+1:n.find(\"]\")]\n          r.titleText = r['Title'].substring(1, r['Title'].indexOf(']'))\n          r.titleLink = r['Title'].substring(r['Title'].lastIndexOf('(')+1, r['Title'].length - 1)\n          r.snomedTerms = r[\"SNOMED Terms (n)\"].substring(1, r['SNOMED Terms (n)'].lastIndexOf(']'))\n          r.snomedLink = `${environment.plots}${r['SNOMED Terms (n)'].substring(r['SNOMED Terms (n)'].lastIndexOf('(')+1, r['SNOMED Terms (n)'].length - 1)}`\n          return r\n        }) \n        this.changes.next({}) \n      },\n      error: (r) => { this.errorHandler.handleError(r) }\n    })\n  }\n\n  find(params?: {\n    id?: number,\n    filter?: {\n      skip?: number,\n      limit?: number,\n      order?: string[],\n    }\n  }): Observable<YouTubeVideo[]> {\n    if (params?.id) {\n      return of([this.data[params.id]])\n    } else {\n      let d = [...this.data]\n      if (params?.filter?.order) {\n        this.order(d, params.filter.order)\n      }\n      if (params?.filter?.skip !== undefined) {\n        d = d.splice(params?.filter?.skip, params?.filter?.limit)\n      }\n      return of(d)\n    }\n  }\n\n  private order(data: YouTubeVideo[], order: string[]): void {\n    order.reduceRight((_: null | void, o): void => {\n      const [key, direction] = o.split(' ')\n      data.sort((a: any, b: any) => {\n        const isAsc = direction.toLowerCase() === 'asc';\n        switch (key) {\n          // case 'title': return compare(a.title, b.title, isAsc);\n          // case 'id': return compare(+a.id, +b.id, isAsc);\n          default: return this.compare(a[key], b[key], isAsc);\n        }\n      });\n    }, null)\n  }\n\n  compare(a: any, b: any, isAsc: boolean): number {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n\n  count(): Observable<number> {\n    return of(this.data.length)\n  }\n}\n",
            "properties": [
                {
                    "name": "channelTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "Date Published",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "Duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "hrsWatched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "Length",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "Recent Views",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "SNOMED Terms (n)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "snomedLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "snomedTerms",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "titleLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "titleText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "Total Views",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "yr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CourseStatsService",
            "id": "injectable-CourseStatsService-f69cb976c0daee9d28b4339ec97ec0f98d8be303f29195e93cec84e339da98a1f3bd1c32ba4ee95a06e38aaae13a2884b07a6d8a93bc1d36b5640c8d50c7bfcf",
            "file": "projects/client/src/app/ehden-table/course-stats.service.ts",
            "properties": [
                {
                    "name": "changes",
                    "defaultValue": "new Subject<Change>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CourseStat[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methods": [
                {
                    "name": "compare",
                    "args": [
                        {
                            "name": "a",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "count",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CourseStat>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "find",
                    "args": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CourseStat[]>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "order",
                    "args": [
                        {
                            "name": "data",
                            "type": "CourseStat[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "order",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "CourseStat[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "order",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { delay, Observable, of, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Change } from '../table-data-source';\n\nexport interface CourseStat {\n  \"course_fullname\": string,\n  \"courseFullNameText\"?: string,\n  \"courseFullNameLink\"?: String,\n  \"course_shortname\": string,\n  \"category\": string,\n  \"started\": number,\n  \"completions\": number,\n  \"course_started\": string,\n  \"authors\": string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseStatsService {\n\n  data: CourseStat[] = []\n  changes = new Subject<Change>()\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandler,\n  ) {\n    this.http.get<CourseStat[]>(`${environment.plots}/course-stats`).subscribe({\n      next: (p) => { \n        this.data = p.map((r) => {\n          // n[n.find(\"[\")+1:n.find(\"]\")]\n          r.courseFullNameText = r['course_fullname'].substring(1, r['course_fullname'].indexOf(']'))\n          r.courseFullNameLink = r['course_fullname'].substring(r['course_fullname'].lastIndexOf('(')+1, r['course_fullname'].length - 1)\n          return r\n        }) \n        this.changes.next({}) \n      },\n      error: (r) => { this.errorHandler.handleError(r) }\n    })\n  }\n\n  create(params: {\n    body: Omit<CourseStat, 'id'>\n  }): Observable<CourseStat> {\n    const n = {...params.body, id: this.data.length}\n    this.data.push(n)\n    this.changes.next({})\n    return of(n).pipe(delay(1000))\n  }\n\n  find(params?: {\n    id?: number,\n    filter?: {\n      skip?: number,\n      limit?: number,\n      order?: string[],\n    }\n  }): Observable<CourseStat[]> {\n    if (params?.id) {\n      return of([this.data[params.id]])\n    } else {\n      let d = [...this.data]\n      if (params?.filter?.order) {\n        this.order(d, params.filter.order)\n      }\n      if (params?.filter?.skip !== undefined) {\n        d = d.splice(params?.filter?.skip, params?.filter?.limit)\n      }\n      return of(d)\n    }\n  }\n\n  private order(data: CourseStat[], order: string[]): void {\n    order.reduceRight((_: null | void, o): void => {\n      const [key, direction] = o.split(' ')\n      data.sort((a: any, b: any) => {\n        const isAsc = direction.toLowerCase() === 'asc';\n        switch (key) {\n          // case 'title': return compare(a.title, b.title, isAsc);\n          // case 'id': return compare(+a.id, +b.id, isAsc);\n          default: return this.compare(a[key], b[key], isAsc);\n        }\n      });\n    }, null)\n  }\n\n  compare(a: any, b: any, isAsc: boolean): number {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n\n  count(): Observable<number> {\n    return of(this.data.length)\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "errorHandler",
                        "type": "ErrorHandler",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "errorHandler",
                        "type": "ErrorHandler",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "IframeTokenBucketService",
            "id": "injectable-IframeTokenBucketService-4923f332fd3762ea639e37538dcaee40a25f2c0b4a002e742ca78f48f3423bb596ee53c2d081ef2c8dfb06eb67cdd3ab31eec3c238a2eb06ac3e9f9fd4a47b94",
            "file": "projects/client/src/app/iframe-plot/iframe-token-bucket.service.ts",
            "properties": [
                {
                    "name": "_dequeueActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "_id",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "_plotDequeue",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "_resizeQueue",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "_subscribers",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "_tokens",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "_roundRobin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "queueResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "roundRobin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribePlotDequeue",
                    "args": [
                        {
                            "name": "next",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "next",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unsubscribePlotDequeue",
                    "args": [
                        {
                            "name": "subscription",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "subscription",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { debounceTime, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IframeTokenBucketService {\n  // This grants plot \"tokens\" to subscribers\n  // using a throttled, leaky bucket, debounced, round robin strategy.\n  // I was bored...\n\n  _tokens = 3\n  _subscribers: { [key: string]: () => void } = {}\n  _plotDequeue: string[] = []\n  _resizeQueue = new Subject()\n\n  constructor(\n  ) { \n    this._resizeQueue.pipe(\n      debounceTime(2000),\n    ).subscribe(() => {\n      this._plotDequeue.push(...Object.keys(this._subscribers))\n      setTimeout(() => this.roundRobin())\n    })\n  }\n\n  queueResize() {\n    this._resizeQueue.next(null)\n  }\n\n  _id = 0\n  subscribePlotDequeue(next: () => void) {\n    const id = this._id\n    this._id += 1\n    this._subscribers[`${id}`] = next\n    // We can't debounce these even if we'd\n    // like to in order to minimize traffic\n    // during a resize. There's no good way\n    // to know if this is a \"real init\" which should\n    // have no delay, or a \"resize init\" which\n    // should be debounced.\n    this._plotDequeue.push(`${id}`)\n    setTimeout(() => this.roundRobin())\n    return id\n  }\n\n  unsubscribePlotDequeue(subscription: number) {\n    delete this._subscribers[subscription]\n  }\n\n  _dequeueActive = false\n  roundRobin() {\n    if (!this._dequeueActive) {\n      this._dequeueActive = true\n      this._roundRobin()\n    }\n  }\n\n  _roundRobin() {\n    if (!this._plotDequeue.length || !this._tokens) {\n      this._dequeueActive = false\n      return\n    }\n    const id = this._plotDequeue.splice(0, 1)[0]\n    if (id in this._subscribers) {\n      this._tokens -= 1\n      setTimeout(() => {\n        this._tokens += 1\n        if (this._tokens == 1) {\n          this.roundRobin()\n        }\n      }, 2000)\n      this._subscribers[id]()\n    }\n    this._roundRobin()\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "type": "injectable"
        },
        {
            "name": "PublicationsService",
            "id": "injectable-PublicationsService-f0ef5d1386bbc8602c04d324a35bc80a832389e32e0b2ed8ca4df639652befc541cebca5c2650f8113cf94d5a19e7980fca9cf74bdfca5ce32ccc1d4c80bf51b",
            "file": "projects/client/src/app/pub-med-table/publications.service.ts",
            "properties": [
                {
                    "name": "changes",
                    "defaultValue": "new Subject<Change>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Publication[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methods": [
                {
                    "name": "compare",
                    "args": [
                        {
                            "name": "a",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "count",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Publication>",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "find",
                    "args": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Publication[]>",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "order",
                    "args": [
                        {
                            "name": "data",
                            "type": "Publication[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "order",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Publication[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "order",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { delay, Observable, of, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Change } from '../table-data-source';\n\nexport interface Publication  {\n  \"Authors\": string,\n  \"Citation Count\": number,\n  \"Creation Date\": string,\n  \"First Authors\": string,\n  \"Journal\": string,\n  \"PubMed ID\": string,\n  \"Publication\": string,\n  \"publicationTitle\"?: string,\n  \"publicationLink\"?: string,\n  \"Publication Year\": number,\n  \"SNOMED Terms (n)\": string,\n  \"snomedTerms\"?: string,\n  \"snomedLink\"?: string,\n  \"Title\": string,\n  \"authors\": \"\"\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublicationsService {\n\n  data: Publication[] = []\n  changes = new Subject<Change>()\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandler,\n  ) {\n    this.http.get<Publication[]>(`${environment.plots}/publications`).subscribe({\n      next: (p) => { \n        this.data = p.map((r) => {\n          // n[n.find(\"[\")+1:n.find(\"]\")]\n          r.publicationTitle = r['Publication'].substring(1, r['Publication'].indexOf(']'))\n          r.publicationLink = r['Publication'].substring(r['Publication'].lastIndexOf('(')+1, r['Publication'].length - 1)\n          r.snomedTerms = r[\"SNOMED Terms (n)\"].substring(1, r['SNOMED Terms (n)'].lastIndexOf(']'))\n          r.snomedLink = `${environment.plots}${r['SNOMED Terms (n)'].substring(r['SNOMED Terms (n)'].lastIndexOf('(')+1, r['SNOMED Terms (n)'].length - 1)}`\n          return r\n        }) \n        this.changes.next({}) \n      },\n      error: (r) => { this.errorHandler.handleError(r) }\n    })\n  }\n\n  create(params: {\n    body: Omit<Publication, 'id'>\n  }): Observable<Publication> {\n    const n = {...params.body, id: this.data.length}\n    this.data.push(n)\n    this.changes.next({})\n    return of(n).pipe(delay(1000))\n  }\n\n  find(params?: {\n    id?: number,\n    filter?: {\n      skip?: number,\n      limit?: number,\n      order?: string[],\n    }\n  }): Observable<Publication[]> {\n    if (params?.id) {\n      return of([this.data[params.id]])\n    } else {\n      let d = [...this.data]\n      if (params?.filter?.order) {\n        this.order(d, params.filter.order)\n      }\n      if (params?.filter?.skip !== undefined) {\n        d = d.splice(params?.filter?.skip, params?.filter?.limit)\n      }\n      return of(d)\n    }\n  }\n\n  private order(data: Publication[], order: string[]): void {\n    order.reduceRight((_: null | void, o): void => {\n      const [key, direction] = o.split(' ')\n      data.sort((a: any, b: any) => {\n        const isAsc = direction.toLowerCase() === 'asc';\n        switch (key) {\n          // case 'title': return compare(a.title, b.title, isAsc);\n          // case 'id': return compare(+a.id, +b.id, isAsc);\n          default: return this.compare(a[key], b[key], isAsc);\n        }\n      });\n    }, null)\n  }\n\n  compare(a: any, b: any, isAsc: boolean): number {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n\n  count(): Observable<number> {\n    return of(this.data.length)\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "errorHandler",
                        "type": "ErrorHandler",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "errorHandler",
                        "type": "ErrorHandler",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "YouTubeService",
            "id": "injectable-YouTubeService-96f0bb2039374a2b89e67180bfb6426db703778d83db3ec708e6a37dad07d2cceee582ea698d2c5a321042a6d36d9a75a20b0b2a4e4cfabb588be0649af66202",
            "file": "projects/client/src/app/you-tube-table/you-tube.service.ts",
            "properties": [
                {
                    "name": "changes",
                    "defaultValue": "new Subject<Change>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "YouTubeVideo[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methods": [
                {
                    "name": "compare",
                    "args": [
                        {
                            "name": "a",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "count",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "find",
                    "args": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<YouTubeVideo[]>",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "order",
                    "args": [
                        {
                            "name": "data",
                            "type": "YouTubeVideo[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "order",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "YouTubeVideo[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "order",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { delay, Observable, of, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Change } from '../table-data-source';\n\nexport interface YouTubeVideo {\n  \"id\": string,\n  \"Title\": string,\n  \"titleText\"?: string,\n  \"titleLink\"?: string,\n  \"Duration\": string,\n  \"Date Published\": string,\n  \"Total Views\": number,\n  \"Recent Views\": number,\n  \"channelTitle\": string,\n  \"SNOMED Terms (n)\": string,\n  \"snomedTerms\"?: string,\n  \"snomedLink\"?: string,\n  \"yr\": number,\n  \"hrsWatched\": number,\n  \"Length\": string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YouTubeService {\n\n  data: YouTubeVideo[] = []\n  changes = new Subject<Change>()\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandler,\n  ) {\n    this.http.get<YouTubeVideo[]>(`${environment.plots}/youtube`).subscribe({\n      next: (p) => { \n        this.data = p.map((r) => {\n          // n[n.find(\"[\")+1:n.find(\"]\")]\n          r.titleText = r['Title'].substring(1, r['Title'].indexOf(']'))\n          r.titleLink = r['Title'].substring(r['Title'].lastIndexOf('(')+1, r['Title'].length - 1)\n          r.snomedTerms = r[\"SNOMED Terms (n)\"].substring(1, r['SNOMED Terms (n)'].lastIndexOf(']'))\n          r.snomedLink = `${environment.plots}${r['SNOMED Terms (n)'].substring(r['SNOMED Terms (n)'].lastIndexOf('(')+1, r['SNOMED Terms (n)'].length - 1)}`\n          return r\n        }) \n        this.changes.next({}) \n      },\n      error: (r) => { this.errorHandler.handleError(r) }\n    })\n  }\n\n  find(params?: {\n    id?: number,\n    filter?: {\n      skip?: number,\n      limit?: number,\n      order?: string[],\n    }\n  }): Observable<YouTubeVideo[]> {\n    if (params?.id) {\n      return of([this.data[params.id]])\n    } else {\n      let d = [...this.data]\n      if (params?.filter?.order) {\n        this.order(d, params.filter.order)\n      }\n      if (params?.filter?.skip !== undefined) {\n        d = d.splice(params?.filter?.skip, params?.filter?.limit)\n      }\n      return of(d)\n    }\n  }\n\n  private order(data: YouTubeVideo[], order: string[]): void {\n    order.reduceRight((_: null | void, o): void => {\n      const [key, direction] = o.split(' ')\n      data.sort((a: any, b: any) => {\n        const isAsc = direction.toLowerCase() === 'asc';\n        switch (key) {\n          // case 'title': return compare(a.title, b.title, isAsc);\n          // case 'id': return compare(+a.id, +b.id, isAsc);\n          default: return this.compare(a[key], b[key], isAsc);\n        }\n      });\n    }, null)\n  }\n\n  compare(a: any, b: any, isAsc: boolean): number {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n\n  count(): Observable<number> {\n    return of(this.data.length)\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "errorHandler",
                        "type": "ErrorHandler",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "errorHandler",
                        "type": "ErrorHandler",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppErrorHandler",
            "id": "class-AppErrorHandler-1c956d9aeda3dfd78fde157141acab5be28dea67d9028a6b520f5f9d1307f3298d6ec293f8ce72a31629787b29bfa2168cf3a191be17f51fab714c05983bebe9",
            "file": "projects/client/src/main.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { provideHttpClient } from '@angular/common/http';\nimport { enableProdMode, ErrorHandler } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { provideRouter, Route } from '@angular/router';\nimport { AppComponent } from './app/app.component';\n\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst ROUTES: Route[] = [\n  { path: '', loadComponent: () => import('./app/dashboard/dashboard.component').then(mod => mod.DashboardComponent) },\n  { path: 'pubmed', loadComponent: () => import('./app/pub-med/pub-med.component').then(mod => mod.PubMedComponent) },\n  { path: 'youtube', loadComponent: () => import('./app/you-tube/you-tube.component').then(mod => mod.YouTubeComponent) },\n  { path: 'ehden', loadComponent: () => import('./app/ehden/ehden.component').then(mod => mod.EhdenComponent) },\n  { path: '**',   redirectTo: '', pathMatch: 'full' },\n];\n\nclass AppErrorHandler implements ErrorHandler {\n  handleError(error: any) {\n    console.error(error)\n  }\n}\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    {provide: ErrorHandler, useClass: AppErrorHandler},\n    provideRouter(ROUTES),\n    provideAnimations(),\n    provideHttpClient(),\n  ]\n})\n",
            "properties": [],
            "methods": [
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ErrorHandler"
            ]
        },
        {
            "name": "TableDataSource",
            "id": "class-TableDataSource-18753e604d54048f93e50afb992a48329b1eabb01e9fbed5464e104b05df292f2cb55c84fa11bd06127577259299e3dbff9e9ce223dd4f7284c56739fc24dacb",
            "file": "projects/client/src/app/table-data-source.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { concatMap } from 'rxjs/operators';\nimport { Observable, merge, of, Subject } from 'rxjs';\n\nexport interface Change {}\n\ninterface DataService<T> {\n\n  find: (params?: {\n    id?: number,\n    filter?: {\n      skip?: number,\n      limit?: number,\n      order?: string[],\n    }\n  }) => Observable<T[]>\n\n  changes: Subject<Change>\n}\n\nexport class TableDataSource<T> extends DataSource<T> {\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor(\n    private dataService: DataService<T>,\n  ) {\n    super();\n  }\n\n  connect(): Observable<T[]> {\n    if (this.paginator && this.sort) {\n      return merge(of({}), this.dataService.changes, this.paginator.page, this.sort.sortChange)\n        .pipe(\n          concatMap(() => {\n            const skip = this.paginator!.pageIndex * this.paginator!.pageSize;\n            const order = (!this.sort || !this.sort.active || this.sort.direction === '') ?\n              undefined\n              :\n              [`${this.sort.active} ${this.sort.direction}`]\n            return this.dataService.find({\n              filter: {skip, limit: this.paginator!.pageSize, order}\n            })\n          }),\n        );\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  disconnect(): void {}\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataService",
                        "type": "DataService<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "dataService",
                        "type": "DataService<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-23c83314e3ffef360a707f9e5d496a6126433a018697052913e878d859a7aaee03e6e7f93a44c003282e9ed0ae2e1e912fe8bf25fc49e5010c91c575ab49ed87",
            "file": "projects/client/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "Location"
                },
                {
                    "name": "{ provide: LocationStrategy, useClass: PathLocationStrategy }"
                }
            ],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "prefersColorScheme",
                    "defaultValue": "'dark'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "toolbarHeight",
                    "defaultValue": "this.breakpointObserver.observe([Breakpoints.XSmall])\n  .pipe(\n    map(result => result.matches ? 56 : 64)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "upToLarge",
                    "defaultValue": "this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium])\n  .pipe(\n    map(result => result.matches),\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [
                {
                    "name": "px",
                    "args": [
                        {
                            "name": "px",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "px",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatListModule} from '@angular/material/list';\nimport { RouterModule, RouterOutlet } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    RouterOutlet,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [Location, {provide: LocationStrategy, useClass: PathLocationStrategy}]\n})\nexport class AppComponent {\n\n  location\n\n  upToLarge: Observable<boolean> = this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium])\n  .pipe(\n    map(result => result.matches),\n  );\n\n  toolbarHeight: Observable<number> = this.breakpointObserver.observe([Breakpoints.XSmall])\n  .pipe(\n    map(result => result.matches ? 56 : 64)\n  );\n\n  prefersColorScheme: string = 'dark'\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n  ) {\n    this.location = location\n    const updatePrefersColorScheme = () => {\n      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', updatePrefersColorScheme)\n      this.prefersColorScheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    updatePrefersColorScheme()\n  }\n\n  px(px: number) {\n    return `${px}px`\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.mat-toolbar.mat-primary {\n  position: fixed;\n  z-index: 2;\n}\n\n.padding-top-8 {\n  padding-top: 8px;\n}\n\n.no-margin {\n  margin: 0;\n}",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"full-height\">\n  <mat-toolbar color=\"primary\" class=\"navigation-toolbar\">\n    <button\n      type=\"button\"\n      color=\"accent\"\n      aria-label=\"Toggle sidenav\"\n      mat-icon-button\n      (click)=\"drawer.toggle()\"\n      *ngIf=\"upToLarge | async\">\n      <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n    </button>\n    <a mat-button routerLink=\"\" class=\"toolbar-anchor mat-headline-5 no-margin\">Community Dashboard</a>\n  </mat-toolbar>\n  <mat-sidenav-container class=\"full-height\">\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [fixedTopGap]=\"toolbarHeight | async\"\n        [attr.role]=\"(upToLarge | async) ? 'dialog' : 'navigation'\"\n        [mode]=\"(upToLarge | async) ? 'over' : 'side'\"\n        [opened]=\"(upToLarge | async) === false\">\n      <img src=\"/assets/ohdsi-logo-with-text-199-{{prefersColorScheme}}.png\" class=\"padding-top-8\">\n      <mat-nav-list>\n        <a mat-list-item routerLink=\"pubmed\" [activated]=\"location.pathname === '/pubmed'\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\" (click)=\"drawer.close()\">PubMed Publication Tracking</a>\n        <a mat-list-item routerLink=\"youtube\" [activated]=\"location.pathname === '/youtube'\" routerLinkActive=\"active\"  ariaCurrentWhenActive=\"page\" (click)=\"drawer.close()\">YouTube Video Tracking</a>\n        <a mat-list-item routerLink=\"ehden\" [activated]=\"location.pathname === '/ehden'\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\" (click)=\"drawer.close()\">Ehden Course Tracking</a>\n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <div [style]=\"{'height': px((toolbarHeight | async)!)}\"></div>\n      <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "projects/example-stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-5874e67e702c813066ff616720a1b35c4ed63ee386ef85fa0dda147786e5cce7c5a1769f346ba3c0681167c046b064751c4b03ace86f842232db2b5d58ce6a96",
            "file": "projects/client/src/app/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ehdenPortal",
                    "defaultValue": "new ComponentPortal(EhdenSummaryComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "layout",
                    "defaultValue": "this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium]).pipe(\n    map(({ breakpoints }) => {\n      if (breakpoints[Breakpoints.XSmall]) {\n        return [\n          { cols: 12, rows: 4, portal: this.welcomePortal, inputs: {} },\n          { cols: 12, rows: 4, portal: this.pubMedPortal, inputs: {orientation: 'vertical'} },\n          { cols: 12, rows: 4, portal: this.youTubePortal, inputs: {orientation: 'vertical'}  },\n          { cols: 12, rows: 4, portal: this.ehdenPortal, inputs: {orientation: 'vertical'}  },\n          { cols: 12, rows: 2, portal: this.workingGroupPortal, inputs: {} },\n        ]\n       } else if (breakpoints[Breakpoints.Small]) {\n        return [\n          { cols: 6, rows: 5, portal: this.welcomePortal, inputs: {} },\n          { cols: 6, rows: 3, portal: this.pubMedPortal, inputs: {orientation: 'vertical'} },\n          { cols: 6, rows: 3, portal: this.youTubePortal, inputs: {orientation: 'vertical'} },\n          { cols: 6, rows: 3, portal: this.ehdenPortal, inputs: {orientation: 'vertical'} },\n          { cols: 6, rows: 2, portal: this.workingGroupPortal, inputs: {} },\n        ]\n     } else {\n        return [\n          { cols: 4, rows: 4, portal: this.welcomePortal, inputs: {} },\n          { cols: 8, rows: 3, portal: this.pubMedPortal, inputs: {orientation: 'horizontal'} },\n          { cols: 8, rows: 1, portal: this.workingGroupPortal, inputs: {orientation: 'horizontal'} },\n          { cols: 6, rows: 3, portal: this.youTubePortal, inputs: {orientation: 'vertical'} },\n          { cols: 6, rows: 3, portal: this.ehdenPortal, inputs: {orientation: 'vertical'} },\n        ]\n      }\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "pubMedPortal",
                    "defaultValue": "new ComponentPortal(PubMedSummaryComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "welcomePortal",
                    "defaultValue": "new ComponentPortal(WelcomeComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "workingGroupPortal",
                    "defaultValue": "new ComponentPortal(WorkingGroupSummaryComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "youTubePortal",
                    "defaultValue": "new ComponentPortal(YouTubeSummaryComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "setInputs",
                    "args": [
                        {
                            "name": "ref",
                            "type": "CdkPortalOutletAttachedRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputs",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "CdkPortalOutletAttachedRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputs",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ComponentRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map } from 'rxjs';\nimport { WelcomeComponent } from '../dashboard-welcome/dashboard-welcome.component';\nimport { YouTubeSummaryComponent } from '../you-tube-summary/you-tube-summary.component';\nimport { EhdenSummaryComponent } from '../ehden-summary/ehden-summary.component';\nimport { WorkingGroupSummaryComponent } from '../working-group-summary/working-group-summary.component';\nimport { CdkPortalOutletAttachedRef, ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { PubMedSummaryComponent } from '../pub-med-summary/pub-med-summary.component';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [\n    MatGridListModule,\n    PortalModule,\n    CommonModule,\n  ],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  welcomePortal = new ComponentPortal(WelcomeComponent)\n  youTubePortal = new ComponentPortal(YouTubeSummaryComponent)\n  pubMedPortal = new ComponentPortal(PubMedSummaryComponent)\n  ehdenPortal = new ComponentPortal(EhdenSummaryComponent)\n  workingGroupPortal = new ComponentPortal(WorkingGroupSummaryComponent)\n\n  layout = this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium]).pipe(\n    map(({ breakpoints }) => {\n      if (breakpoints[Breakpoints.XSmall]) {\n        return [\n          { cols: 12, rows: 4, portal: this.welcomePortal, inputs: {} },\n          { cols: 12, rows: 4, portal: this.pubMedPortal, inputs: {orientation: 'vertical'} },\n          { cols: 12, rows: 4, portal: this.youTubePortal, inputs: {orientation: 'vertical'}  },\n          { cols: 12, rows: 4, portal: this.ehdenPortal, inputs: {orientation: 'vertical'}  },\n          { cols: 12, rows: 2, portal: this.workingGroupPortal, inputs: {} },\n        ]\n       } else if (breakpoints[Breakpoints.Small]) {\n        return [\n          { cols: 6, rows: 5, portal: this.welcomePortal, inputs: {} },\n          { cols: 6, rows: 3, portal: this.pubMedPortal, inputs: {orientation: 'vertical'} },\n          { cols: 6, rows: 3, portal: this.youTubePortal, inputs: {orientation: 'vertical'} },\n          { cols: 6, rows: 3, portal: this.ehdenPortal, inputs: {orientation: 'vertical'} },\n          { cols: 6, rows: 2, portal: this.workingGroupPortal, inputs: {} },\n        ]\n     } else {\n        return [\n          { cols: 4, rows: 4, portal: this.welcomePortal, inputs: {} },\n          { cols: 8, rows: 3, portal: this.pubMedPortal, inputs: {orientation: 'horizontal'} },\n          { cols: 8, rows: 1, portal: this.workingGroupPortal, inputs: {orientation: 'horizontal'} },\n          { cols: 6, rows: 3, portal: this.youTubePortal, inputs: {orientation: 'vertical'} },\n          { cols: 6, rows: 3, portal: this.ehdenPortal, inputs: {orientation: 'vertical'} },\n        ]\n      }\n    })\n  );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n  ) {}\n\n  setInputs(ref: CdkPortalOutletAttachedRef, inputs: object) {\n    ref = ref as ComponentRef<any>\n    for (const [k, v] of Object.entries(inputs)) {\n      ref.setInput(k, v)\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 60,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"grid-container\">\n  <mat-grid-list [cols]=\"12\" rowHeight=\"150\" gutterSize=\"24\" class=\"margin-24\">\n\n    <mat-grid-tile *ngFor=\"let tile of (layout | async); index as i;\"\n      [colspan]=\"tile.cols\"\n      [rowspan]=\"tile.rows\"\n    >\n      <div class=\"full-shadow-margin\">\n        <ng-template [cdkPortalOutlet]=\"tile.portal\" (attached)=\"setInputs($event, tile.inputs)\"></ng-template>\n      </div>\n    </mat-grid-tile>\n\n  </mat-grid-list>\n</div>"
        },
        {
            "name": "EhdenComponent",
            "id": "component-EhdenComponent-59d233099d5a5e8342d181aeb062358e13443b3ae93365da2c9e12de1b2758a23053bdee709e49ceb34950a4df2967212f8395c11bcfd9985e6916bd8c374890",
            "file": "projects/client/src/app/ehden/ehden.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ehden",
            "styleUrls": [
                "./ehden.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./ehden.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ehdenTabs",
                    "defaultValue": "new ComponentPortal(EhdenTabsComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "ehdenWelcomePortal",
                    "defaultValue": "new ComponentPortal(EhdenWelcomeComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "layout",
                    "defaultValue": "this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium]).pipe(\n    map(({ breakpoints }) => {\n      if (breakpoints[Breakpoints.XSmall]) {\n        return {\n          columns: ['course_fullname', 'started', 'completions'],\n          tiles: [\n            { cols: 12, rows: 4, portal: this.ehdenWelcomePortal, inputs: {} },\n            { cols: 12, rows: 4, portal: this.ehdenTabs, inputs: {} },\n          ]\n        }\n       } else if (breakpoints[Breakpoints.Small]) {\n        return {\n          columns: ['course_fullname', 'started', 'completions', 'course_started'],\n          tiles: [\n            { cols: 6, rows: 4, portal: this.ehdenWelcomePortal, inputs: {} },\n            { cols: 6, rows: 4, portal: this.ehdenTabs, inputs: {} },\n          ]\n        }\n     } else {\n        return {\n          columns: ['course_fullname', 'course_shortname', 'category', 'started', 'completions', 'course_started'],\n          tiles: [\n            { cols: 4, rows: 4, portal: this.ehdenWelcomePortal, inputs: {} },\n            { cols: 8, rows: 4, portal: this.ehdenTabs, inputs: {} },\n          ]\n        }\n      }\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "setInputs",
                    "args": [
                        {
                            "name": "ref",
                            "type": "CdkPortalOutletAttachedRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputs",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "CdkPortalOutletAttachedRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputs",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ComponentRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map } from 'rxjs';\nimport { CdkPortalOutletAttachedRef, ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { EhdenWelcomeComponent } from '../ehden-welcome/ehden-welcome.component';\nimport { EhdenTabsComponent } from '../ehden-tabs/ehden-tabs.component';\nimport { EhdenTableComponent } from '../ehden-table/ehden-table.component';\n\n@Component({\n  selector: 'app-ehden',\n  standalone: true,\n  imports: [\n    EhdenTableComponent,\n    MatGridListModule,\n    PortalModule,\n    CommonModule\n  ],\n  templateUrl: './ehden.component.html',\n  styleUrls: ['./ehden.component.css']\n})\nexport class EhdenComponent {\n\n  ehdenWelcomePortal = new ComponentPortal(EhdenWelcomeComponent)\n  ehdenTabs = new ComponentPortal(EhdenTabsComponent)\n\n  layout = this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium]).pipe(\n    map(({ breakpoints }) => {\n      if (breakpoints[Breakpoints.XSmall]) {\n        return {\n          columns: ['course_fullname', 'started', 'completions'],\n          tiles: [\n            { cols: 12, rows: 4, portal: this.ehdenWelcomePortal, inputs: {} },\n            { cols: 12, rows: 4, portal: this.ehdenTabs, inputs: {} },\n          ]\n        }\n       } else if (breakpoints[Breakpoints.Small]) {\n        return {\n          columns: ['course_fullname', 'started', 'completions', 'course_started'],\n          tiles: [\n            { cols: 6, rows: 4, portal: this.ehdenWelcomePortal, inputs: {} },\n            { cols: 6, rows: 4, portal: this.ehdenTabs, inputs: {} },\n          ]\n        }\n     } else {\n        return {\n          columns: ['course_fullname', 'course_shortname', 'category', 'started', 'completions', 'course_started'],\n          tiles: [\n            { cols: 4, rows: 4, portal: this.ehdenWelcomePortal, inputs: {} },\n            { cols: 8, rows: 4, portal: this.ehdenTabs, inputs: {} },\n          ]\n        }\n      }\n    })\n  );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n  ) {}\n\n  setInputs(ref: CdkPortalOutletAttachedRef, inputs: object) {\n    ref = ref as ComponentRef<any>\n    for (const [k, v] of Object.entries(inputs)) {\n      ref.setInput(k, v)\n    }\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ehden.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"grid-container\">\n  <mat-grid-list [cols]=\"12\" rowHeight=\"150\" gutterSize=\"24\" class=\"margin-24\">\n    <mat-grid-tile *ngFor=\"let tile of (layout | async)!.tiles; index as i;\"\n      [colspan]=\"tile.cols\"\n      [rowspan]=\"tile.rows\"\n    >\n      <div class=\"full-shadow-margin\">\n        <ng-template [cdkPortalOutlet]=\"tile.portal\" (attached)=\"setInputs($event, tile.inputs)\"></ng-template>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>\n  <app-ehden-table [displayedColumns]=\"(layout | async)!.columns\"></app-ehden-table>\n</div>"
        },
        {
            "name": "EhdenSummaryComponent",
            "id": "component-EhdenSummaryComponent-2e3922355924511e0d202930ca5d15b5f0c4c0e3ee677431fc574973099610cf1cbb00042c8e11dddb9190b5417b74d13c7782f8def4256534ca053995568baf",
            "file": "projects/client/src/app/ehden-summary/ehden-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ehden-summary",
            "styleUrls": [
                "./ehden-summary.component.css",
                "../dashboard/dashboard-summary.css"
            ],
            "styles": [],
            "templateUrl": [
                "./ehden-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "orientation",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "\"horizontal\" | \"vertical\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\nimport { IframePlotComponent } from '../iframe-plot/iframe-plot.component';\n\n@Component({\n  selector: 'app-ehden-summary',\n  standalone: true,\n  imports: [\n    IframePlotComponent,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    RouterModule,\n    CommonModule\n  ],\n  templateUrl: './ehden-summary.component.html',\n  styleUrls: [\n    './ehden-summary.component.css',\n    '../dashboard/dashboard-summary.css',\n  ]\n})\nexport class EhdenSummaryComponent {\n\n  @Input() orientation: 'horizontal' | 'vertical' = 'vertical'\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ehden-summary.component.css"
                },
                {
                    "data": ".plot {\n  height: 100%;\n  width: 100%;\n}\n\n.plot-container {\n  flex-grow: 1;\n  background: white;\n}\n\n.metrics {\n  /* min-width: 250px; */\n}",
                    "styleUrl": "../dashboard/dashboard-summary.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card class=\"full-height\">\n  <mat-card-header>\n    <mat-card-title>Ehden Learning</mat-card-title>\n    <mat-card-subtitle>Summary</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content class=\"full-height flex-container\" [class.flex-direction-column]=\"orientation == 'vertical'\">\n    <mat-list *ngIf=\"orientation == 'horizontal'; else verticalMetrics\" class=\"fit-content metrics\">\n      <mat-list-item style=\"min-width: 175px\">\n        <span matListItemTitle class=\"metric\">19</span>\n        <span matListItemLine>Number of Courses</span>\n      </mat-list-item>\n      <mat-list-item style=\"min-width: 175px\">\n        <span matListItemTitle class=\"metric\">3,146</span>\n        <span>Course Completions</span>\n      </mat-list-item>\n    </mat-list>\n    <ng-template #verticalMetrics>\n      <div class=\"flex-container flex-wrap\">\n        <mat-list-item class=\"width-unset\" style=\"min-width: 175px\">\n          <span matListItemTitle class=\"metric\">19</span>\n          <span matListItemLine>Number of Courses</span>\n        </mat-list-item>\n        <mat-list-item class=\"width-unset\" style=\"min-width: 175px\">\n          <span matListItemTitle class=\"metric\">3,146</span>\n          <span>Course Completions</span>\n        </mat-list-item>\n      </div>\n    </ng-template>\n    <app-iframe-plot path=\"plots/ehden-users\" class=\"flex-grow\"></app-iframe-plot>\n  </mat-card-content>\n  <mat-card-actions>\n    <a mat-stroked-button color=\"accent\" routerLink=\"ehden\">\n      <mat-icon class=\"material-icons-outlined\">data_exploration</mat-icon>\n      EXPLORE\n    </a>\n  </mat-card-actions>\n</mat-card>"
        },
        {
            "name": "EhdenTableComponent",
            "id": "component-EhdenTableComponent-3408b41beab6e4ee5ad810fa713cd70e8de182137db828a10e0290a15210f921174c9c121bbcaeb2c1d52ab981a8669a7dae4e3f8a0aaf377b03b0a2b576e790",
            "file": "projects/client/src/app/ehden-table/ehden-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ehden-table",
            "styleUrls": [
                "./ehden-table.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./ehden-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayedColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "courseStatsService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CourseStatsService",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableDataSource<CourseStat>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<CourseStat>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, Input, ViewChild } from '@angular/core';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatTable, MatTableModule } from '@angular/material/table';\nimport { TableDataSource } from '../table-data-source';\nimport { CourseStat, CourseStatsService } from './course-stats.service';\n\n@Component({\n  selector: 'app-ehden-table',\n  standalone: true,\n  imports: [\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    CommonModule\n  ],\n  templateUrl: './ehden-table.component.html',\n  styleUrls: ['./ehden-table.component.css']\n})\nexport class EhdenTableComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<CourseStat>;\n  dataSource: TableDataSource<CourseStat>;\n\n  @Input()\n  displayedColumns!: string[]\n\n  constructor(\n    public courseStatsService: CourseStatsService,\n  ) {\n    this.dataSource = new TableDataSource(courseStatsService);\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ehden-table.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "courseStatsService",
                        "type": "CourseStatsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "courseStatsService",
                        "type": "CourseStatsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width\" matSort aria-label=\"Elements\">\n\n    <ng-container matColumnDef=\"course_fullname\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>course_fullname</th>\n      <td mat-cell *matCellDef=\"let row\">\n        <a [href]=\"row.courseFullNameLink\">{{row.courseFullNameText}}</a>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"course_shortname\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>course_shortname</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['course_shortname']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"category\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>category</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['category']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"started\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>started</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['started']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"completions\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>completions</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['completions']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"course_started\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>course_started</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.course_started}}</td>\n    </ng-container>\n    \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"(courseStatsService.count() | async)\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20]\"\n      aria-label=\"Select page\">\n  </mat-paginator>\n</div>\n"
        },
        {
            "name": "EhdenTabsComponent",
            "id": "component-EhdenTabsComponent-2d8dc90421c988663bdf445573cee5ef07d3091d8f4b25627a877079dce728fe86ffc5ed9ad80f60a1f88a044eb8805368b4bc5a299010303f9f7e6d448781ab",
            "file": "projects/client/src/app/ehden-tabs/ehden-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ehden-tabs",
            "styleUrls": [
                "./ehden-tabs.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./ehden-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { IframePlotComponent } from '../iframe-plot/iframe-plot.component';\n\n\n@Component({\n  selector: 'app-ehden-tabs',\n  standalone: true,\n  imports: [\n    IframePlotComponent,\n    MatTabsModule,\n    CommonModule\n  ],\n  templateUrl: './ehden-tabs.component.html',\n  styleUrls: ['./ehden-tabs.component.css']\n})\nexport class EhdenTabsComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "::ng-deep .mat-mdc-tab-body-wrapper{\n  flex-grow: 1;\n}\n\n::ng-deep .mat-mdc-tab-body-content {\n  overflow: hidden !important;\n}\n\n.not-full-height {\n  height: calc(100% - 1px);\n}",
                    "styleUrl": "./ehden-tabs.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-tab-group color=\"accent\" backgroundColor=\"primary\" class=\"not-full-height outline\">\n  <mat-tab label=\"Users\">\n    <ng-template matTabContent>\n      <app-iframe-plot  path=\"plots/ehden-users\"></app-iframe-plot>\n    </ng-template>\n  </mat-tab>\n  <mat-tab label=\"Course Completions\">\n    <ng-template matTabContent>\n      <app-iframe-plot  path=\"plots/ehden-course-completions\"></app-iframe-plot>\n    </ng-template>\n  </mat-tab>\n</mat-tab-group>"
        },
        {
            "name": "EhdenWelcomeComponent",
            "id": "component-EhdenWelcomeComponent-3fe751dc7b9804ab9ec76586b1d49fc08a946d7412f306e6997cd87e68bc7f363e4499160bc6b8d5ffe8a6c3723a9fd1212edb95b2098008ea75e262d4a78da9",
            "file": "projects/client/src/app/ehden-welcome/ehden-welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pub-med-welcome",
            "styleUrls": [
                "./ehden-welcome.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ehden-welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-pub-med-welcome',\n  standalone: true,\n  imports: [\n    MatCardModule,\n    CommonModule\n  ],\n  templateUrl: './ehden-welcome.component.html',\n  styleUrls: ['./ehden-welcome.component.scss']\n})\nexport class EhdenWelcomeComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'sass:map';\n@use '@angular/material' as mat;\n@use '../../styles.scss' as styles;\n\n.headline {\n  position: relative;\n  margin-bottom: 12px;\n}\n\n.absolute {\n  position: absolute;\n  bottom: 8px;\n  z-index: 1;\n}\n\n.header-text {\n  $color-config: mat.get-color-config(styles.$dark-theme);\n  $palette: map.get($color-config, 'accent');\n\n  color: mat.get-color-from-palette($palette, 500) !important;\n}\n\n.headline-title {\n  $headline-config: map.get(styles.$typography, 'headline-4');\n\n  font-size: map.get($headline-config, 'font-size');\n  line-height: map.get($headline-config, 'line-height');\n}\n\n.headline-subtitle {\n  $headline-config: map.get(styles.$typography, 'headline-5');\n\n  font-size: map.get($headline-config, 'font-size');\n  font-weight: map.get($headline-config, 'font-weight');\n  line-height: map.get($headline-config, 'line-weight');\n  margin-top: 4px;\n}\n\n.hero {\n  $color-config: mat.get-color-config(styles.$dark-theme);\n  $palette: map.get($color-config, 'primary');\n\n  background-color: mat.get-color-from-palette($palette, 'default');\n}",
                    "styleUrl": "./ehden-welcome.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card class=\"full-height\" appearance=\"outlined\">\n  <div class=\"headline\">\n    <mat-card-header class=\"absolute\">\n      <mat-card-title class=\"header-text headline-title\">Ehden</mat-card-title>\n      <mat-card-subtitle class=\"header-text headline-subtitle\">\n        Learning Management System Analysis\n      </mat-card-subtitle>\n    </mat-card-header>\n    <!-- <img mat-card-image src=\"/assets/orange-texture.png\" class=\"full-width\"> -->\n    <div mat-card-image class=\"full-width aspect-16-9 hero\"></div>\n  </div>\n  <mat-card-content class=\"full-height\">\n    <p>\n    </p>\n  </mat-card-content>\n</mat-card>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a71f246366d5d3dd2485d220bc2c384ceb3f056eb50faded8ff9e4a6404ca4a28c23117da4b98825de8da482bc2ba3b9abeab416745b32d1a89f68595d2dc939",
            "file": "projects/example-stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport type { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "IframePlotComponent",
            "id": "component-IframePlotComponent-4072a114c8f3934d176b33fe559b35baeb48da24df0ab295b9a35140e890c1faa90dca84f70d8714b8a44b19c7e1ac359289f8010a743b5460da635d5cd00aca",
            "file": "projects/client/src/app/iframe-plot/iframe-plot.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-iframe-plot",
            "styleUrls": [
                "./iframe-plot.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./iframe-plot.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_height",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "_width",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "dashDelay",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "plotContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'plotContainer', {read: ElementRef}"
                        }
                    ]
                },
                {
                    "name": "plotSrc",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "plotSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "retryDelay",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "plot",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { environment } from '../../environments/environment';\nimport { SafeUrlPipe } from './safe-url.pipe';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { IframeTokenBucketService } from './iframe-token-bucket.service';\n\n@Component({\n  selector: 'app-iframe-plot',\n  standalone: true,\n  imports: [\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    SafeUrlPipe,\n    CommonModule\n  ],\n  templateUrl: './iframe-plot.component.html',\n  styleUrls: ['./iframe-plot.component.css']\n})\nexport class IframePlotComponent implements OnDestroy {\n\n  @Input() path!: string\n\n  @ViewChild('plotContainer', { read: ElementRef }) plotContainer!: ElementRef\n\n  plotSrc: string | null = null\n  plotSubscription?: number\n  dashDelay = false\n  retryDelay = false\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private iframeTokenBucketService: IframeTokenBucketService,\n  ) {}\n\n  ngOnDestroy(): void {\n    if (this.plotSubscription) {\n      this.iframeTokenBucketService.unsubscribePlotDequeue(this.plotSubscription)\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => { this.dashDelay = true}, 2000)\n    setTimeout(() => { this.retryDelay = true}, 5000)\n    this.plotSubscription = this.iframeTokenBucketService.subscribePlotDequeue(() => this.plot())\n    new ResizeObserver(() => {\n      this.iframeTokenBucketService.queueResize()\n    }).observe(this.plotContainer.nativeElement)   \n  }\n\n  _height = 0\n  _width = 0\n  plot(): void {\n    const height = this.plotContainer.nativeElement.offsetHeight\n    if (!height) {\n      // Mid-render, requeue.\n      new ResizeObserver(() => this.plot()).observe(this.plotContainer.nativeElement)  \n      return\n    }\n    const width = this.plotContainer.nativeElement.offsetWidth\n    if (height != this._height || width != this._width) {\n      console.log(\"plot\", this.path)\n      this._height = height\n      this._width = width\n      this.plotSrc = `${environment.plots}/${this.path}?height=${height}px&width=${width}`\n      this.changeDetectorRef.detectChanges()\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".plot {\n  height: 100%;\n  width: 100%;\n  z-index: 1;\n}\n\n.loading {\n  /* padding: 24px; */\n  /* height: 100%; */\n  margin-top: 24px;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n}",
                    "styleUrl": "./iframe-plot.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "iframeTokenBucketService",
                        "type": "IframeTokenBucketService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "iframeTokenBucketService",
                        "type": "IframeTokenBucketService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<div #plotContainer class=\"plot-container full-height position-relative\">\n  <div *ngIf=\"dashDelay\" class=\"loading flex-container flex-direction-column position-absolute\">\n    Getting plot from dash...\n    <mat-spinner></mat-spinner>\n    <button *ngIf=\"retryDelay\" mat-button color=\"warn\">refresh to retry</button>\n  </div>\n  <iframe *ngIf=\"plotSrc\" [src]=\"plotSrc | safeUrl\" class=\"no-border plot position-absolute\" \n  ></iframe>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-f5d2fd9ba0ee70c24f514ef21ebdae50beb2e2f42594802a96cdbeb02a59371897162b6be17fcb45cdc0d237d3e4bee611d1ad1d446a54e0699ba35b48991b87",
            "file": "projects/example-stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport type { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PubMedComponent",
            "id": "component-PubMedComponent-dd39761e436cfde6281f23a4dde2b154a75d40d25f831c8cd7ea251b4cd4acff139eac6d5ef7daa4ddc2c58fc4a3e9cb312a2974fa1eb7272cf14460d1446b7e",
            "file": "projects/client/src/app/pub-med/pub-med.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pub-med",
            "styleUrls": [
                "./pub-med.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./pub-med.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "layout",
                    "defaultValue": "this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium]).pipe(\n    map(({ breakpoints }) => {\n      if (breakpoints[Breakpoints.XSmall]) {\n        return {\n          columns: ['Creation Date', 'Authors', 'Publication'],\n          tiles: [\n            { cols: 12, rows: 4, portal: this.pubMedWelcomePortal, inputs: {} },\n            { cols: 12, rows: 4, portal: this.pubMedTabs, inputs: {} },\n          ]\n        }\n       } else if (breakpoints[Breakpoints.Small]) {\n        return {\n          columns: ['Creation Date', 'Authors', 'Publication', 'SNOMED Terms (n)'],\n          tiles: [\n            { cols: 6, rows: 4, portal: this.pubMedWelcomePortal, inputs: {} },\n            { cols: 6, rows: 4, portal: this.pubMedTabs, inputs: {} },\n          ]\n        }\n     } else {\n        return {\n          columns: ['PubMed ID', 'Creation Date', 'Authors', 'Publication', 'Journal', 'SNOMED Terms (n)', 'Citation Count'],\n          tiles: [\n            { cols: 4, rows: 4, portal: this.pubMedWelcomePortal, inputs: {} },\n            { cols: 8, rows: 4, portal: this.pubMedTabs, inputs: {} },\n          ]\n        }\n      }\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "pubMedTabs",
                    "defaultValue": "new ComponentPortal(PubMedTabsComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "pubMedWelcomePortal",
                    "defaultValue": "new ComponentPortal(PubMedWelcomeComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "setInputs",
                    "args": [
                        {
                            "name": "ref",
                            "type": "CdkPortalOutletAttachedRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputs",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "CdkPortalOutletAttachedRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputs",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ComponentRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map } from 'rxjs';\nimport { CdkPortalOutletAttachedRef, ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { PubMedWelcomeComponent } from '../pub-med-welcome/pub-med-welcome.component';\nimport { PubMedTabsComponent } from '../pub-med-tabs/pub-med-tabs.component';\nimport { PubMedTableComponent } from '../pub-med-table/pub-med-table.component';\n\n@Component({\n  selector: 'app-pub-med',\n  standalone: true,\n  imports: [\n    PubMedTableComponent,\n    MatGridListModule,\n    PortalModule,\n    CommonModule\n  ],\n  templateUrl: './pub-med.component.html',\n  styleUrls: ['./pub-med.component.css']\n})\nexport class PubMedComponent {\n\n  pubMedWelcomePortal = new ComponentPortal(PubMedWelcomeComponent)\n  pubMedTabs = new ComponentPortal(PubMedTabsComponent)\n\n  layout = this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium]).pipe(\n    map(({ breakpoints }) => {\n      if (breakpoints[Breakpoints.XSmall]) {\n        return {\n          columns: ['Creation Date', 'Authors', 'Publication'],\n          tiles: [\n            { cols: 12, rows: 4, portal: this.pubMedWelcomePortal, inputs: {} },\n            { cols: 12, rows: 4, portal: this.pubMedTabs, inputs: {} },\n          ]\n        }\n       } else if (breakpoints[Breakpoints.Small]) {\n        return {\n          columns: ['Creation Date', 'Authors', 'Publication', 'SNOMED Terms (n)'],\n          tiles: [\n            { cols: 6, rows: 4, portal: this.pubMedWelcomePortal, inputs: {} },\n            { cols: 6, rows: 4, portal: this.pubMedTabs, inputs: {} },\n          ]\n        }\n     } else {\n        return {\n          columns: ['PubMed ID', 'Creation Date', 'Authors', 'Publication', 'Journal', 'SNOMED Terms (n)', 'Citation Count'],\n          tiles: [\n            { cols: 4, rows: 4, portal: this.pubMedWelcomePortal, inputs: {} },\n            { cols: 8, rows: 4, portal: this.pubMedTabs, inputs: {} },\n          ]\n        }\n      }\n    })\n  );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n  ) {}\n\n  setInputs(ref: CdkPortalOutletAttachedRef, inputs: object) {\n    ref = ref as ComponentRef<any>\n    for (const [k, v] of Object.entries(inputs)) {\n      ref.setInput(k, v)\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pub-med.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"grid-container\">\n  <mat-grid-list [cols]=\"12\" rowHeight=\"150\" gutterSize=\"24\" class=\"margin-24\">\n    <mat-grid-tile *ngFor=\"let tile of (layout | async)!.tiles; index as i;\"\n      [colspan]=\"tile.cols\"\n      [rowspan]=\"tile.rows\"\n    >\n      <div class=\"full-shadow-margin\">\n        <ng-template [cdkPortalOutlet]=\"tile.portal\" (attached)=\"setInputs($event, tile.inputs)\"></ng-template>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>\n  <app-pub-med-table [displayedColumns]=\"(layout | async)!.columns\"></app-pub-med-table>\n</div>"
        },
        {
            "name": "PubMedSummaryComponent",
            "id": "component-PubMedSummaryComponent-7d65b9572fd605c0781a48c7dae04bf21596753cc6a78dca0dd60756def2d4d7b6825f1018e96de0724360e24820c001dda85e87fdf39e73351c8cab49e7e26c",
            "file": "projects/client/src/app/pub-med-summary/pub-med-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pub-med-summary",
            "styleUrls": [
                "./pub-med-summary.component.css",
                "../dashboard/dashboard-summary.css"
            ],
            "styles": [],
            "templateUrl": [
                "./pub-med-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "orientation",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "\"horizontal\" | \"vertical\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\nimport { IframePlotComponent } from '../iframe-plot/iframe-plot.component';\n\n@Component({\n  selector: 'app-pub-med-summary',\n  standalone: true,\n  imports: [\n    IframePlotComponent,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    RouterModule,\n    CommonModule\n  ],\n  templateUrl: './pub-med-summary.component.html',\n  styleUrls: [\n    './pub-med-summary.component.css',\n    '../dashboard/dashboard-summary.css'\n  ]\n})\nexport class PubMedSummaryComponent {\n\n  @Input() orientation: 'horizontal' | 'vertical' = 'vertical'\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pub-med-summary.component.css"
                },
                {
                    "data": ".plot {\n  height: 100%;\n  width: 100%;\n}\n\n.plot-container {\n  flex-grow: 1;\n  background: white;\n}\n\n.metrics {\n  /* min-width: 250px; */\n}",
                    "styleUrl": "../dashboard/dashboard-summary.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card class=\"full-height\">\n  <mat-card-header>\n    <mat-card-title>Publication Analysis</mat-card-title>\n    <mat-card-subtitle>Summary</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content class=\"full-height flex-container\" [class.flex-direction-column]=\"orientation == 'vertical'\">\n    <mat-list *ngIf=\"orientation == 'horizontal'; else verticalMetrics\" class=\"fit-content metrics\">\n      <mat-list-item style=\"min-width: 175px\">\n        <span matListItemTitle class=\"metric\">508</span>\n        <span matListItemLine>PubMed Manuscripts</span>\n      </mat-list-item>\n      <mat-list-item>\n        <span matListItemTitle class=\"metric\">2,057</span>\n        <span>PubMed Authors</span>\n      </mat-list-item>\n    </mat-list>\n    <ng-template #verticalMetrics>\n      <div class=\"flex-container flex-wrap\">\n        <mat-list-item class=\"width-unset\" style=\"min-width: 175px\">\n          <span matListItemTitle class=\"metric\">508</span>\n          <span matListItemLine>PubMed Manuscripts</span>\n        </mat-list-item>\n        <mat-list-item class=\"width-unset\" style=\"min-width: 175px\">\n          <span matListItemTitle class=\"metric\">2,057</span>\n          <span>PubMed Authors</span>\n        </mat-list-item>\n      </div>\n    </ng-template>\n    <app-iframe-plot  path=\"plots/publications-citations\" class=\"flex-grow\"></app-iframe-plot>\n  </mat-card-content>\n  <mat-card-actions>\n    <a mat-stroked-button color=\"accent\" routerLink=\"pubmed\">\n      <mat-icon class=\"material-icons-outlined\">data_exploration</mat-icon>\n      EXPLORE\n    </a>\n  </mat-card-actions>\n</mat-card>"
        },
        {
            "name": "PubMedTableComponent",
            "id": "component-PubMedTableComponent-0c70e4d9ca2ef6a74196d893413756aeebb77d408119ae97a12270327f45a32b00c166ff54a0dd5365ef10d9ffbb8f4167ff08979a8e5cf37f24e93e2a657c00",
            "file": "projects/client/src/app/pub-med-table/pub-med-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pub-med-table",
            "styleUrls": [
                "./pub-med-table.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./pub-med-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayedColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableDataSource<Publication>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "publicationsService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PublicationsService",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<Publication>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, Input, ViewChild } from '@angular/core';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatTable, MatTableModule } from '@angular/material/table';\nimport { TableDataSource } from '../table-data-source';\nimport { Publication, PublicationsService } from './publications.service';\n\n@Component({\n  selector: 'app-pub-med-table',\n  standalone: true,\n  imports: [\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    CommonModule\n  ],\n  templateUrl: './pub-med-table.component.html',\n  styleUrls: ['./pub-med-table.component.css']\n})\nexport class PubMedTableComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<Publication>;\n  dataSource: TableDataSource<Publication>;\n\n  @Input()\n  displayedColumns!: string[]\n\n  constructor(\n    public publicationsService: PublicationsService,\n  ) {\n    this.dataSource = new TableDataSource(publicationsService);\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pub-med-table.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "publicationsService",
                        "type": "PublicationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "publicationsService",
                        "type": "PublicationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width\" matSort aria-label=\"Elements\">\n\n    <ng-container matColumnDef=\"PubMed ID\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>PubMed ID</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['PubMed ID']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Creation Date\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Creation Date</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['Creation Date']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Authors\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Authors</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['Authors']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Publication\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Publication</th>\n      <td mat-cell *matCellDef=\"let row\">\n        <a [href]=\"row.publicationLink\">{{row.publicationTitle}}</a>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Journal\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Journal</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['Journal']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"SNOMED Terms (n)\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>SNOMED Terms (n)</th>\n      <td mat-cell *matCellDef=\"let row\">\n        <a [href]=\"row.snomedLink\">{{row.snomedTerms}}</a>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Citation Count\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Citation Count</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['Citation Count']}}</td>\n    </ng-container>\n    \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"(publicationsService.count() | async)\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20]\"\n      aria-label=\"Select page\">\n  </mat-paginator>\n</div>\n"
        },
        {
            "name": "PubMedTabsComponent",
            "id": "component-PubMedTabsComponent-71e7a5900b0d29c51817ff86b01095a0a5ac97d00af8c1d20705bdafc1395a038c46c568c01681e1d7767621314f2c1900e37cf75c3ba40943b229e76cb40a14",
            "file": "projects/client/src/app/pub-med-tabs/pub-med-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pub-med-tabs",
            "styleUrls": [
                "./pub-med-tabs.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./pub-med-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { IframePlotComponent } from '../iframe-plot/iframe-plot.component';\n\n\n@Component({\n  selector: 'app-pub-med-tabs',\n  standalone: true,\n  imports: [\n    IframePlotComponent,\n    MatTabsModule,\n    CommonModule\n  ],\n  templateUrl: './pub-med-tabs.component.html',\n  styleUrls: ['./pub-med-tabs.component.css']\n})\nexport class PubMedTabsComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "::ng-deep .mat-mdc-tab-body-wrapper{\n  flex-grow: 1;\n}\n\n::ng-deep .mat-mdc-tab-body-content {\n  overflow: hidden !important;\n}\n\n.not-full-height {\n  height: calc(100% - 1px);\n}",
                    "styleUrl": "./pub-med-tabs.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-tab-group color=\"accent\" backgroundColor=\"primary\" class=\"not-full-height outline\">\n  <mat-tab label=\"OHDSI Publications & Cumulative Citations\">\n    <ng-template matTabContent>\n      <app-iframe-plot  path=\"plots/publications-citations\"></app-iframe-plot>\n    </ng-template>\n  </mat-tab>\n  <mat-tab label=\"New & Cumulative OHDSI Researchers\">\n    <ng-template matTabContent>\n      <app-iframe-plot  path=\"plots/researchers\"></app-iframe-plot>\n    </ng-template>\n  </mat-tab>\n</mat-tab-group>"
        },
        {
            "name": "PubMedWelcomeComponent",
            "id": "component-PubMedWelcomeComponent-e37d132ae65ac8b0c7fb66af7fa5f6f40225ec08da8a34bd4b5efd341b1a773811e33f009c759708bf5ec82c31bb20e1388017ac599df943ae943d23d905ad13",
            "file": "projects/client/src/app/pub-med-welcome/pub-med-welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pub-med-welcome",
            "styleUrls": [
                "./pub-med-welcome.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pub-med-welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-pub-med-welcome',\n  standalone: true,\n  imports: [\n    MatCardModule,\n    CommonModule\n  ],\n  templateUrl: './pub-med-welcome.component.html',\n  styleUrls: ['./pub-med-welcome.component.scss']\n})\nexport class PubMedWelcomeComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'sass:map';\n@use '@angular/material' as mat;\n@use '../../styles.scss' as styles;\n\n.headline {\n  position: relative;\n  margin-bottom: 12px;\n}\n\n.absolute {\n  position: absolute;\n  bottom: 8px;\n  z-index: 1;\n}\n\n.header-text {\n  $color-config: mat.get-color-config(styles.$dark-theme);\n  $palette: map.get($color-config, 'accent');\n\n  color: mat.get-color-from-palette($palette, 500) !important;\n}\n\n.headline-title {\n  $headline-config: map.get(styles.$typography, 'headline-4');\n\n  font-size: map.get($headline-config, 'font-size');\n  line-height: map.get($headline-config, 'line-height');\n}\n\n.headline-subtitle {\n  $headline-config: map.get(styles.$typography, 'headline-5');\n\n  font-size: map.get($headline-config, 'font-size');\n  font-weight: map.get($headline-config, 'font-weight');\n  line-height: map.get($headline-config, 'line-weight');\n  margin-top: 4px;\n}\n\n.hero {\n  $color-config: mat.get-color-config(styles.$dark-theme);\n  $palette: map.get($color-config, 'primary');\n\n  background-color: mat.get-color-from-palette($palette, 'default');\n}",
                    "styleUrl": "./pub-med-welcome.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card class=\"full-height\" appearance=\"outlined\">\n  <div class=\"headline\">\n    <mat-card-header class=\"absolute\">\n      <mat-card-title class=\"header-text headline-title\">Publication Analysis</mat-card-title>\n      <mat-card-subtitle class=\"header-text headline-subtitle\">\n        PubMed OHDSI Manuscripts\n      </mat-card-subtitle>\n    </mat-card-header>\n    <!-- <img mat-card-image src=\"/assets/orange-texture.png\" class=\"full-width\"> -->\n    <div mat-card-image class=\"full-width aspect-16-9 hero\"></div>\n  </div>\n  <mat-card-content class=\"full-height\">\n    <p>\n      PubMed Publication Tracking highlights scholarship generated using the OMOP Common Data Model, OHDSI tools, or the OHDSI network. These publications represent scientific accomplishments across areas of data standards, methodological research, open-source development, and clinical applications. We provide the resource to search and browse the catalogue of OHDSI-related publications by date, author, title, journal, and SNOMED terms. We monitor the impact of our community using summary statistics (number of publications and citations), and the growth and diversity of our community with the number of distinct authors. Searches for new papers are performed daily, and citation counts are updated monthy.\n    </p>\n  </mat-card-content>\n</mat-card>"
        },
        {
            "name": "WelcomeComponent",
            "id": "component-WelcomeComponent-b16dc18ad1247748398836f17759b2445f4e138940799906951079bd1f7760447d06c7e7b1d58e7dbae96f950bf0623a72f3fef5492867c291aaa366b577c30d",
            "file": "projects/client/src/app/dashboard-welcome/dashboard-welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-welcome",
            "styleUrls": [
                "./dashboard-welcome.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard-welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatCardModule} from '@angular/material/card';\n\n@Component({\n  selector: 'app-welcome',\n  standalone: true,\n  imports: [\n    MatCardModule,\n    CommonModule\n  ],\n  templateUrl: './dashboard-welcome.component.html',\n  styleUrls: ['./dashboard-welcome.component.scss']\n})\nexport class WelcomeComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'sass:map';\n@use '@angular/material' as mat;\n@use '../../styles.scss' as styles;\n\n.headline {\n  position: relative;\n  margin-bottom: 12px;\n}\n\n.absolute {\n  position: absolute;\n  bottom: 24px;\n  z-index: 1;\n}\n\n.header-text {\n  $color-config: mat.get-color-config(styles.$dark-theme);\n  $palette: map.get($color-config, 'accent');\n\n  color: mat.get-color-from-palette($palette, 500) !important;\n}\n\n.headline-title {\n  $headline-config: map.get(styles.$typography, 'headline-3');\n\n  font-size: map.get($headline-config, 'font-size');\n  line-height: map.get($headline-config, 'line-height');\n}\n\n.headline-subtitle {\n  $headline-config: map.get(styles.$typography, 'headline-5');\n\n  font-size: map.get($headline-config, 'font-size');\n  font-weight: map.get($headline-config, 'font-weight');\n  margin-left: 8px;\n}\n\n.hero {\n  $color-config: mat.get-color-config(styles.$dark-theme);\n  $palette: map.get($color-config, 'primary');\n\n  background-color: mat.get-color-from-palette($palette, 'default');\n}",
                    "styleUrl": "./dashboard-welcome.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card class=\"full-height\" appearance=\"outlined\">\n  <div class=\"headline\">\n    <mat-card-header class=\"absolute\">\n      <mat-card-title class=\"header-text headline-title\">Welcome!</mat-card-title>\n      <mat-card-subtitle class=\"header-text headline-subtitle\">\n        About the OHDSI<br>Community Dashboard\n      </mat-card-subtitle>\n    </mat-card-header>\n    <!-- <img mat-card-image src=\"/assets/orange-texture.png\" class=\"full-width\"> -->\n    <div mat-card-image class=\"full-width aspect-16-9 hero\"></div>\n  </div>\n  <mat-card-content class=\"full-height\">\n    <p>\n      Observational Health Data Sciences and Informatics (OHDSI) is an open science community. OHDSI's mission is to improve health by empowering a community to collaboratively generate the evidence that promotes better health decisions and better care. The OHDSI Community Dashboard is a tool to highlight the progress we are making toward this mission and the collective accomplishments and impact of our community. A goal of the dashboard is help our community identify how members can see the OHDSI eco-system as an interconnected system to make a larger impact. We hope you find these tools useful staying up to date with all the activities in OHDSI as well as finding new colleagues in our community to collaborate with. Dashboards are developed to represent various aspects of the OHDSI community activities.\n    </p>\n  </mat-card-content>\n</mat-card>"
        },
        {
            "name": "WorkingGroupSummaryComponent",
            "id": "component-WorkingGroupSummaryComponent-53c042e440e5d63d7f0ee42b5388d923cd062dcfba1af4b8fef824b841c6e7f0bf61c71ec624870ac4aadb2fe714a8fa8be476d938529305f196126849c62b44",
            "file": "projects/client/src/app/working-group-summary/working-group-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-working-group-summary",
            "styleUrls": [
                "./working-group-summary.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./working-group-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "orientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "\"horizontal\" | \"vertical\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-working-group-summary',\n  standalone: true,\n  imports: [\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    RouterModule,\n    CommonModule\n  ],\n  templateUrl: './working-group-summary.component.html',\n  styleUrls: ['./working-group-summary.component.css']\n})\nexport class WorkingGroupSummaryComponent {\n\n  @Input() orientation!: 'horizontal' | 'vertical'\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./working-group-summary.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card class=\"full-height\">\n  <mat-card-header>\n    <mat-card-title>Working Groups</mat-card-title>\n    <mat-card-subtitle>Summary</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content class=\"full-height\">\n    <div class=\"flex-container flex-wrap\">\n      <mat-list-item class=\"width-unset\" style=\"min-width: 175px\">\n        <span matListItemTitle class=\"metric\">28</span>\n        <span matListItemLine>Total Working Groups</span>\n      </mat-list-item>\n      <mat-list-item class=\"width-unset\" style=\"min-width: 175px\">\n        <span matListItemTitle class=\"metric\">3000+</span>\n        <span>Members</span>\n      </mat-list-item>\n    </div> \n  </mat-card-content>\n  <!-- <mat-card-actions>\n    <a mat-stroked-button color=\"accent\" routerLink=\"working-groups\">\n      <mat-icon class=\"material-icons-outlined\">data_exploration</mat-icon>\n      EXPLORE\n    </a>\n  </mat-card-actions> -->\n</mat-card>"
        },
        {
            "name": "YouTubeComponent",
            "id": "component-YouTubeComponent-986174c5e1217ea423f9de2337aa326ac61d0eda3c5c371438178b1b47f52672bb198e78162b2ff123dd6131255d51c85f08c1f4c0ec5060fdda43937edb23cc",
            "file": "projects/client/src/app/you-tube/you-tube.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-you-tube",
            "styleUrls": [
                "./you-tube.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./you-tube.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "layout",
                    "defaultValue": "this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium]).pipe(\n    map(({ breakpoints }) => {\n      if (breakpoints[Breakpoints.XSmall]) {\n        return {\n          columns: ['Title', 'Date Published', 'Total Views'],\n          tiles: [\n            { cols: 12, rows: 4, portal: this.youTubeWelcomePortal, inputs: {} },\n            { cols: 12, rows: 4, portal: this.youTubeTabs, inputs: {} },\n          ]\n        }\n       } else if (breakpoints[Breakpoints.Small]) {\n        return {\n          columns: ['Title', 'Date Published', 'Total Views', 'Recent Views', 'SNOMED Terms (n)'],\n          tiles: [\n            { cols: 6, rows: 4, portal: this.youTubeWelcomePortal, inputs: {} },\n            { cols: 6, rows: 4, portal: this.youTubeTabs, inputs: {} },\n          ]\n        }\n     } else {\n        return {\n          columns: ['Title', 'Date Published', 'Length', 'Total Views', 'Recent Views', 'SNOMED Terms (n)'],\n          tiles: [\n            { cols: 4, rows: 4, portal: this.youTubeWelcomePortal, inputs: {} },\n            { cols: 8, rows: 4, portal: this.youTubeTabs, inputs: {} },\n          ]\n        }\n      }\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "youTubeTabs",
                    "defaultValue": "new ComponentPortal(YouTubeTabsComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "youTubeWelcomePortal",
                    "defaultValue": "new ComponentPortal(YouTubeWelcomeComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "setInputs",
                    "args": [
                        {
                            "name": "ref",
                            "type": "CdkPortalOutletAttachedRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputs",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "CdkPortalOutletAttachedRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputs",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ComponentRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map } from 'rxjs';\nimport { CdkPortalOutletAttachedRef, ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { YouTubeWelcomeComponent } from '../you-tube-welcome/you-tube-welcome.component';\nimport { YouTubeTabsComponent } from '../you-tube-tabs/you-tube-tabs.component';\nimport { YouTubeTableComponent } from '../you-tube-table/you-tube-table.component';\n\n@Component({\n  selector: 'app-you-tube',\n  standalone: true,\n  imports: [\n    YouTubeTableComponent,\n    MatGridListModule,\n    PortalModule,\n    CommonModule\n  ],\n  templateUrl: './you-tube.component.html',\n  styleUrls: ['./you-tube.component.css']\n})\nexport class YouTubeComponent {\n\n  youTubeWelcomePortal = new ComponentPortal(YouTubeWelcomeComponent)\n  youTubeTabs = new ComponentPortal(YouTubeTabsComponent)\n\n  layout = this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium]).pipe(\n    map(({ breakpoints }) => {\n      if (breakpoints[Breakpoints.XSmall]) {\n        return {\n          columns: ['Title', 'Date Published', 'Total Views'],\n          tiles: [\n            { cols: 12, rows: 4, portal: this.youTubeWelcomePortal, inputs: {} },\n            { cols: 12, rows: 4, portal: this.youTubeTabs, inputs: {} },\n          ]\n        }\n       } else if (breakpoints[Breakpoints.Small]) {\n        return {\n          columns: ['Title', 'Date Published', 'Total Views', 'Recent Views', 'SNOMED Terms (n)'],\n          tiles: [\n            { cols: 6, rows: 4, portal: this.youTubeWelcomePortal, inputs: {} },\n            { cols: 6, rows: 4, portal: this.youTubeTabs, inputs: {} },\n          ]\n        }\n     } else {\n        return {\n          columns: ['Title', 'Date Published', 'Length', 'Total Views', 'Recent Views', 'SNOMED Terms (n)'],\n          tiles: [\n            { cols: 4, rows: 4, portal: this.youTubeWelcomePortal, inputs: {} },\n            { cols: 8, rows: 4, portal: this.youTubeTabs, inputs: {} },\n          ]\n        }\n      }\n    })\n  );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n  ) {}\n\n  setInputs(ref: CdkPortalOutletAttachedRef, inputs: object) {\n    ref = ref as ComponentRef<any>\n    for (const [k, v] of Object.entries(inputs)) {\n      ref.setInput(k, v)\n    }\n  }\n}\n\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./you-tube.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"grid-container\">\n  <mat-grid-list [cols]=\"12\" rowHeight=\"150\" gutterSize=\"24\" class=\"margin-24\">\n    <mat-grid-tile *ngFor=\"let tile of (layout | async)!.tiles; index as i;\"\n      [colspan]=\"tile.cols\"\n      [rowspan]=\"tile.rows\"\n    >\n      <div class=\"full-shadow-margin\">\n        <ng-template [cdkPortalOutlet]=\"tile.portal\" (attached)=\"setInputs($event, tile.inputs)\"></ng-template>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>\n  <app-you-tube-table [displayedColumns]=\"(layout | async)!.columns\"></app-you-tube-table>\n</div>"
        },
        {
            "name": "YouTubeSummaryComponent",
            "id": "component-YouTubeSummaryComponent-6b84b6ee1c9ede5941911aeb74bdaf274dea227b3f22ed5665caa954368dc2916ee91557c84bc2de99df3521b561fd654fbdb9f7ef5d7bd13ae4edce7bbdfb3a",
            "file": "projects/client/src/app/you-tube-summary/you-tube-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-you-tube-summary",
            "styleUrls": [
                "./you-tube-summary.component.css",
                "../dashboard/dashboard-summary.css"
            ],
            "styles": [],
            "templateUrl": [
                "./you-tube-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "orientation",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "\"horizontal\" | \"vertical\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { IframePlotComponent } from '../iframe-plot/iframe-plot.component';\n\n@Component({\n  selector: 'app-you-tube-summary',\n  standalone: true,\n  imports: [\n    IframePlotComponent,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    RouterModule,\n    CommonModule\n  ],\n  templateUrl: './you-tube-summary.component.html',\n  styleUrls: [\n    './you-tube-summary.component.css',\n    '../dashboard/dashboard-summary.css',\n  ]\n})\nexport class YouTubeSummaryComponent {\n\n  @Input() orientation: 'horizontal' | 'vertical' = 'vertical'\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./you-tube-summary.component.css"
                },
                {
                    "data": ".plot {\n  height: 100%;\n  width: 100%;\n}\n\n.plot-container {\n  flex-grow: 1;\n  background: white;\n}\n\n.metrics {\n  /* min-width: 250px; */\n}",
                    "styleUrl": "../dashboard/dashboard-summary.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card class=\"full-height\">\n  <mat-card-header>\n    <mat-card-title>YouTube</mat-card-title>\n    <mat-card-subtitle>Summary</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content class=\"full-height flex-container\" [class.flex-direction-column]=\"orientation == 'vertical'\">\n    <mat-list *ngIf=\"orientation == 'horizontal'; else verticalMetrics\" class=\"fit-content metrics\">\n      <mat-list-item style=\"min-width: 175px\">\n        <span matListItemTitle class=\"metric\">808</span>\n        <span matListItemLine>Videos Published</span>\n      </mat-list-item>\n      <mat-list-item>\n        <span matListItemTitle class=\"metric\">208K+</span>\n        <span>Hours Watched</span>\n      </mat-list-item>\n    </mat-list>\n    <ng-template #verticalMetrics>\n      <div class=\"flex-container flex-wrap\">\n        <mat-list-item class=\"width-unset\" style=\"min-width: 175px\">\n          <span matListItemTitle class=\"metric\">808</span>\n          <span matListItemLine>Videos Published</span>\n        </mat-list-item>\n        <mat-list-item class=\"width-unset\" style=\"min-width: 175px\">\n          <span matListItemTitle class=\"metric\">208K+</span>\n          <span>Hours Watched</span>\n        </mat-list-item>\n      </div>\n    </ng-template>\n    <app-iframe-plot  path=\"plots/youtube-annual\" class=\"flex-grow\"></app-iframe-plot>\n  </mat-card-content>\n  <mat-card-actions>\n    <a mat-stroked-button color=\"accent\" routerLink=\"youtube\">\n      <mat-icon class=\"material-icons-outlined\">data_exploration</mat-icon>\n      EXPLORE\n    </a>\n  </mat-card-actions>\n</mat-card>"
        },
        {
            "name": "YouTubeTableComponent",
            "id": "component-YouTubeTableComponent-1ed1c6a9b86055aadefaae4e66da9cca0cfa82d248d783da8badce0560b273311012dd8992895ecfb90209415201880f02f0f471228d32c9d89251ec1f6b41e2",
            "file": "projects/client/src/app/you-tube-table/you-tube-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-you-tube-table",
            "styleUrls": [
                "./you-tube-table.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./you-tube-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayedColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableDataSource<YouTubeVideo>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<YouTubeVideo>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                },
                {
                    "name": "youTubeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "YouTubeService",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, Input, ViewChild } from '@angular/core';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatTable, MatTableModule } from '@angular/material/table';\nimport { TableDataSource } from '../table-data-source';\nimport { YouTubeVideo, YouTubeService } from './you-tube.service';\n\n@Component({\n  selector: 'app-you-tube-table',\n  standalone: true,\n  imports: [\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    CommonModule\n  ],\n  templateUrl: './you-tube-table.component.html',\n  styleUrls: ['./you-tube-table.component.css']\n})\nexport class YouTubeTableComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<YouTubeVideo>;\n  dataSource: TableDataSource<YouTubeVideo>;\n\n  @Input()\n  displayedColumns!: string[]\n\n  constructor(\n    public youTubeService: YouTubeService,\n  ) {\n    this.dataSource = new TableDataSource(youTubeService);\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./you-tube-table.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "youTubeService",
                        "type": "YouTubeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "youTubeService",
                        "type": "YouTubeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width\" matSort aria-label=\"Elements\">\n\n    <ng-container matColumnDef=\"Title\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Title</th>\n      <td mat-cell *matCellDef=\"let row\">\n        <a [href]=\"row.titleLink\">{{row.titleText}}</a>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Date Published\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date Published</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['Date Published']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Length\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Length</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['Length']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Total Views\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Total Views</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['Total Views']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Recent Views\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Recent Views</th>\n      <td mat-cell *matCellDef=\"let row\">{{row['Recent Views']}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"SNOMED Terms (n)\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>SNOMED Terms (n)</th>\n      <td mat-cell *matCellDef=\"let row\">\n        <a [href]=\"row.snomedLink\">{{row.snomedTerms}}</a>\n      </td>\n    </ng-container>\n    \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"(youTubeService.count() | async)\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20]\"\n      aria-label=\"Select page\">\n  </mat-paginator>\n</div>\n"
        },
        {
            "name": "YouTubeTabsComponent",
            "id": "component-YouTubeTabsComponent-dd89c2fdf75cf4b3191b04f28003d34db31fb16a875d2108ac39da1b7ab1fee6ee48da237b958f0adc074109d71ac435ac21beed10186ed80c799872aa1828b0",
            "file": "projects/client/src/app/you-tube-tabs/you-tube-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-you-tube-tabs",
            "styleUrls": [
                "./you-tube-tabs.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./you-tube-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { IframePlotComponent } from '../iframe-plot/iframe-plot.component';\n\n\n@Component({\n  selector: 'app-you-tube-tabs',\n  standalone: true,\n  imports: [\n    IframePlotComponent,\n    MatTabsModule,\n    CommonModule\n  ],\n  templateUrl: './you-tube-tabs.component.html',\n  styleUrls: ['./you-tube-tabs.component.css']\n})\nexport class YouTubeTabsComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "::ng-deep .mat-mdc-tab-body-wrapper{\n  flex-grow: 1;\n}\n\n::ng-deep .mat-mdc-tab-body-content {\n  overflow: hidden !important;\n}\n\n.not-full-height {\n  height: calc(100% - 1px);\n}",
                    "styleUrl": "./you-tube-tabs.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-tab-group color=\"accent\" backgroundColor=\"primary\" class=\"not-full-height outline\">\n  <mat-tab label=\"Annual Analysis\">\n    <ng-template matTabContent>\n      <app-iframe-plot  path=\"plots/youtube-annual\"></app-iframe-plot>\n    </ng-template>\n  </mat-tab>\n  <mat-tab label=\"Monthly Analysis\">\n    <ng-template matTabContent>\n      <app-iframe-plot  path=\"plots/youtube-monthly\"></app-iframe-plot>\n    </ng-template>\n  </mat-tab>\n</mat-tab-group>"
        },
        {
            "name": "YouTubeWelcomeComponent",
            "id": "component-YouTubeWelcomeComponent-c6b63032799e9a824700cf588c9bcea44b1373667b9eb07ba68a76d28090f1c3ebe7a77a8fa3834717d6aa0d36bf72e2da8e4283c0c6bd41844cc5da2eccfd2d",
            "file": "projects/client/src/app/you-tube-welcome/you-tube-welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-you-tube-welcome",
            "styleUrls": [
                "./you-tube-welcome.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./you-tube-welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-you-tube-welcome',\n  standalone: true,\n  imports: [\n    MatCardModule,\n    CommonModule\n  ],\n  templateUrl: './you-tube-welcome.component.html',\n  styleUrls: ['./you-tube-welcome.component.scss']\n})\nexport class YouTubeWelcomeComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'sass:map';\n@use '@angular/material' as mat;\n@use '../../styles.scss' as styles;\n\n.headline {\n  position: relative;\n  margin-bottom: 12px;\n}\n\n.absolute {\n  position: absolute;\n  bottom: 8px;\n  z-index: 1;\n}\n\n.header-text {\n  $color-config: mat.get-color-config(styles.$dark-theme);\n  $palette: map.get($color-config, 'accent');\n\n  color: mat.get-color-from-palette($palette, 500) !important;\n}\n\n.headline-title {\n  $headline-config: map.get(styles.$typography, 'headline-4');\n\n  font-size: map.get($headline-config, 'font-size');\n  line-height: map.get($headline-config, 'line-height');\n}\n\n.headline-subtitle {\n  $headline-config: map.get(styles.$typography, 'headline-5');\n\n  font-size: map.get($headline-config, 'font-size');\n  font-weight: map.get($headline-config, 'font-weight');\n  line-height: map.get($headline-config, 'line-weight');\n  margin-top: 4px;\n}\n\n.hero {\n  $color-config: mat.get-color-config(styles.$dark-theme);\n  $palette: map.get($color-config, 'primary');\n\n  background-color: mat.get-color-from-palette($palette, 'default');\n}",
                    "styleUrl": "./you-tube-welcome.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card class=\"full-height\" appearance=\"outlined\">\n  <div class=\"headline\">\n    <mat-card-header class=\"absolute\">\n      <mat-card-title class=\"header-text headline-title\">YouTube</mat-card-title>\n      <mat-card-subtitle class=\"header-text headline-subtitle\">\n        Analysis\n      </mat-card-subtitle>\n    </mat-card-header>\n    <!-- <img mat-card-image src=\"/assets/orange-texture.png\" class=\"full-width\"> -->\n    <div mat-card-image class=\"full-width aspect-16-9 hero\"></div>\n  </div>\n  <mat-card-content class=\"full-height\">\n    <p>\n      Youtube Tracking leverages the Google YouTube Data API and highlights videos released across the OHDSI Youtube Channels. These videos are intended to serve two purposes: 1) provide users a great source of training on learning how to conduct observational research. 2) keep our community aware of the latest activities within our open science community. Searches for new videos are performed daily.\n    </p>\n  </mat-card-content>\n</mat-card>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/client/src/app/app.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: AppComponent) => ({\n    props: args,\n  }),\n}"
            },
            {
                "name": "Component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/client/src/app/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: DashboardComponent) => ({\n    props: args,\n  }),\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/client/src/environments/environment.production.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  plots: '',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/client/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  plots: 'http://127.0.0.1:5001',\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/example-stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/example-stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/example-stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/example-stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Button>",
                "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/example-stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Header>",
                "defaultValue": "{\n  title: 'Example/Header',\n  component: Header,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/7.0/angular/writing-docs/docs-page\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      declarations: [Button],\n      imports: [CommonModule],\n    }),\n  ],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/7.0/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/client/src/app/app.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppComponent>",
                "defaultValue": "{\n  title: 'CommunityDashboard/App',\n  component: AppComponent,\n  parameters: {\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        AppComponent,\n        BrowserAnimationsModule,\n        RouterModule.forRoot([]),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/client/src/app/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DashboardComponent>",
                "defaultValue": "{\n  title: 'CommunityDashboard/Dashboard',\n  component: DashboardComponent,\n  parameters: {\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        DashboardComponent,\n        BrowserAnimationsModule,\n        RouterModule.forRoot([]),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/example-stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "ROUTES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/client/src/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\n  { path: '', loadComponent: () => import('./app/dashboard/dashboard.component').then(mod => mod.DashboardComponent) },\n  { path: 'pubmed', loadComponent: () => import('./app/pub-med/pub-med.component').then(mod => mod.PubMedComponent) },\n  { path: 'youtube', loadComponent: () => import('./app/you-tube/you-tube.component').then(mod => mod.YouTubeComponent) },\n  { path: 'ehden', loadComponent: () => import('./app/ehden/ehden.component').then(mod => mod.EhdenComponent) },\n  { path: '**',   redirectTo: '', pathMatch: 'full' },\n]"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/example-stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/example-stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Button>",
                "file": "projects/example-stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Header>",
                "file": "projects/example-stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AppComponent>",
                "file": "projects/client/src/app/app.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DashboardComponent>",
                "file": "projects/client/src/app/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/client/src/app/app.stories.ts": [
                {
                    "name": "Component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/client/src/app/app.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: AppComponent) => ({\n    props: args,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/client/src/app/app.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppComponent>",
                    "defaultValue": "{\n  title: 'CommunityDashboard/App',\n  component: AppComponent,\n  parameters: {\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        AppComponent,\n        BrowserAnimationsModule,\n        RouterModule.forRoot([]),\n      ],\n    }),\n  ],\n}"
                }
            ],
            "projects/client/src/app/dashboard/dashboard.stories.ts": [
                {
                    "name": "Component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/client/src/app/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: DashboardComponent) => ({\n    props: args,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/client/src/app/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DashboardComponent>",
                    "defaultValue": "{\n  title: 'CommunityDashboard/Dashboard',\n  component: DashboardComponent,\n  parameters: {\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        DashboardComponent,\n        BrowserAnimationsModule,\n        RouterModule.forRoot([]),\n      ],\n    }),\n  ],\n}"
                }
            ],
            "projects/client/src/environments/environment.production.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/client/src/environments/environment.production.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  plots: '',\n}"
                }
            ],
            "projects/client/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/client/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  plots: 'http://127.0.0.1:5001',\n}"
                }
            ],
            "projects/example-stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/example-stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/example-stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Button>",
                    "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/example-stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/example-stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/example-stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                }
            ],
            "projects/example-stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/example-stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/example-stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/example-stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Header>",
                    "defaultValue": "{\n  title: 'Example/Header',\n  component: Header,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/7.0/angular/writing-docs/docs-page\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      declarations: [Button],\n      imports: [CommonModule],\n    }),\n  ],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/7.0/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "projects/client/src/main.ts": [
                {
                    "name": "ROUTES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/client/src/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\n  { path: '', loadComponent: () => import('./app/dashboard/dashboard.component').then(mod => mod.DashboardComponent) },\n  { path: 'pubmed', loadComponent: () => import('./app/pub-med/pub-med.component').then(mod => mod.PubMedComponent) },\n  { path: 'youtube', loadComponent: () => import('./app/you-tube/you-tube.component').then(mod => mod.YouTubeComponent) },\n  { path: 'ehden', loadComponent: () => import('./app/ehden/ehden.component').then(mod => mod.EhdenComponent) },\n  { path: '**',   redirectTo: '', pathMatch: 'full' },\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/example-stories/Button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Button>",
                    "file": "projects/example-stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/example-stories/Header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Header>",
                    "file": "projects/example-stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/client/src/app/app.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AppComponent>",
                    "file": "projects/client/src/app/app.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/client/src/app/dashboard/dashboard.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DashboardComponent>",
                    "file": "projects/client/src/app/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "projects/client/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/app.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/app.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/dashboard-welcome/dashboard-welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/dashboard/dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/dashboard/dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/ehden-summary/ehden-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EhdenSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/ehden-table/course-stats.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CourseStatsService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/ehden-table/course-stats.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CourseStat",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/ehden-table/ehden-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EhdenTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/ehden-tabs/ehden-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EhdenTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/ehden-welcome/ehden-welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EhdenWelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/ehden/ehden.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EhdenComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/iframe-plot/iframe-plot.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IframePlotComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/iframe-plot/iframe-token-bucket.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IframeTokenBucketService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/iframe-plot/safe-url.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SafeUrlPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/pub-med-summary/pub-med-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PubMedSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/pub-med-table/pub-med-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PubMedTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/pub-med-table/publications.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PublicationsService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/pub-med-table/publications.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Publication",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/pub-med-tabs/pub-med-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PubMedTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/pub-med-welcome/pub-med-welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PubMedWelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/pub-med/pub-med.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PubMedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/table-data-source.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TableDataSource",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/table-data-source.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Change",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/table-data-source.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/working-group-summary/working-group-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorkingGroupSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/you-tube-summary/you-tube-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "YouTubeSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/you-tube-table/you-tube-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "YouTubeTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/you-tube-table/you-tube.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "YouTubeService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/you-tube-table/you-tube.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "YouTubeVideo",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/you-tube-tabs/you-tube-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "YouTubeTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/you-tube-welcome/you-tube-welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "YouTubeWelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/app/you-tube/you-tube.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "YouTubeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/environments/environment.production.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/main.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppErrorHandler",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/client/src/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ROUTES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/example-stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/example-stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/example-stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/example-stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/example-stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/example-stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/example-stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/example-stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/example-stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/example-stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "projects/example-stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/example-stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}